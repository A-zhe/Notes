{"compress":true,"commitItems":[["4fba3b52-8850-498d-84ea-2eb291353008",1568604339990,"# [mybatis 详解（一）------JDBC](https://www.cnblogs.com/ysocean/p/7271600.html)\n\n**目录**\n\n*   [1、什么是MyBatis?](https://www.cnblogs.com/ysocean/p/7271600.html#_label0)\n*   [2、为什么会有 MyBatis?](https://www.cnblogs.com/ysocean/p/7271600.html#_label1)\n*   [3、分析](https://www.cnblogs.com/ysocean/p/7271600.html#_label2)\n\n* * *\n\n[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)\n\n### 1、什么是MyBatis?\n\n　　MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github。\n\n　　iBATIS一词来源于“internet”和“abatis”的组合，是一个基于Java的持久层框架。iBATIS提供的持久层框架包括SQL Maps和Data Access Objects（DAO）。\n\n　　MyBatis 是支持普通 SQL查询，存储过程和高级映射的优秀持久层框架。MyBatis 消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis 使用简单的 XML或注解用于配置和原始映射，将接口和 Java 的POJOs（Plain Ordinary Java Objects，普通的 Java对象）映射成数据库中的记录。\n\n[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)\n\n### 2、为什么会有 MyBatis?\n\n　　通过上面的介绍，我们知道 MyBatis 是来和数据库打交道。那么在这之前，我们是使用 JDBC 来对数据库进行增删改查等一系列操作的，而我们之所以会放弃使用 JDBC，转而使用 MyBatis 框架，这是为什么呢？或者说使用 MyBatis 对比 JDBC 有什么好处？\n\n　　下面我们通过一段 JDBC 对 Person 表的操作来具体看看。\n\n　　 person 表为：\n\n| \n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n | \n\n`public` `class` `Person {`\n\n`private` `Long pid;`\n\n`private` `String pname;`\n\n`public` `Long getPid() {`\n\n`return` `pid;`\n\n`}`\n\n`public` `void` `setPid(Long pid) {`\n\n`this``.pid = pid;`\n\n`}`\n\n`public` `String getPname() {`\n\n`return` `pname;`\n\n`}`\n\n`public` `void` `setPname(String pname) {`\n\n`this``.pname = pname;`\n\n`}`\n\n`}`\n\n |\n\n　　JDBC 查询操作：\n\n| \n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n66\n\n67\n\n68\n\n69\n\n70\n\n71\n\n72\n\n73\n\n74\n\n75\n\n76\n\n77\n\n78\n\n79\n\n80\n\n81\n\n82\n\n83\n\n84\n\n85\n\n86\n\n87\n\n88\n\n89\n\n | \n\n`package` `com.ys.dao;`\n\n`import` `java.sql.Connection;`\n\n`import` `java.sql.DriverManager;`\n\n`import` `java.sql.PreparedStatement;`\n\n`import` `java.sql.ResultSet;`\n\n`import` `java.sql.SQLException;`\n\n`import` `java.sql.Statement;`\n\n`import` `java.util.ArrayList;`\n\n`import` `java.util.List;`\n\n`import` `javax.swing.DebugGraphics;`\n\n`import` `com.ys.bean.Person;`\n\n`public` `class` `CRUDDao {`\n\n`//MySQL数据库驱动`\n\n`public` `static` `String driverClass = ``\"com.mysql.jdbc.Driver\"``;`\n\n`//MySQL用户名`\n\n`public` `static` `String userName = ``\"root\"``;`\n\n`//MySQL密码`\n\n`public` `static` `String passWord = ``\"root\"``;`\n\n`//MySQL URL`\n\n`public` `static` `String url = ``\"jdbc:mysql://localhost:3306/test\"``;`\n\n`//定义数据库连接`\n\n`public` `static` `Connection conn = ``null``;`\n\n`//定义声明数据库语句,使用 预编译声明 PreparedStatement提高数据库执行性能`\n\n`public` `static` `PreparedStatement ps = ``null``;`\n\n`//定义返回结果集`\n\n`public` `static` `ResultSet rs = ``null``;`\n\n`/**`\n\n`* 查询 person 表信息`\n\n`* @return：返回 person 的 list 集合`\n\n`*/`\n\n`public` `static` `List<Person> readPerson(){`\n\n`List<Person> list = ``new` `ArrayList<>();`\n\n`try` `{`\n\n`//加载数据库驱动`\n\n`Class.forName(driverClass);`\n\n`//获取数据库连接`\n\n`conn = DriverManager.getConnection(url, userName, passWord);`\n\n`//定义 sql 语句,?表示占位符`\n\n`String sql = ``\"select * from person where pname=?\"``;`\n\n`//获取预编译处理的statement`\n\n`ps = conn.prepareStatement(sql);`\n\n`//设置sql语句中的参数，第一个为sql语句中的参数的?(从1开始)，第二个为设置的参数值`\n\n`ps.setString(``1``, ``\"qzy\"``);`\n\n`//向数据库发出 sql 语句查询，并返回结果集`\n\n`rs = ps.executeQuery();`\n\n`while` `(rs.next()) {`\n\n`Person p = ``new` `Person();`\n\n`p.setPid(rs.getLong(``1``));`\n\n`p.setPname(rs.getString(``2``));`\n\n`list.add(p);`\n\n`}`\n\n`} ``catch` `(Exception e) {`\n\n`e.printStackTrace();`\n\n`}``finally``{`\n\n`//关闭数据库连接`\n\n`if``(rs!=``null``){`\n\n`try` `{`\n\n`rs.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`if``(ps!=``null``){`\n\n`try` `{`\n\n`ps.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`if``(conn!=``null``){`\n\n`try` `{`\n\n`conn.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`}`\n\n`return` `list;`\n\n`}`\n\n`public` `static` `void` `main(String[] args) {`\n\n`System.out.println(CRUDDao.readPerson());`\n\n`}`\n\n`}`\n\n |\n\n[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)\n\n### 3、分析\n\n　　通过上面的例子我们可以分析如下几点：\n\n　　①、问题一：数据库连接，使用时就创建，使用完毕就关闭，这样会对数据库进行频繁的获取连接和关闭连接，造成数据库资源浪费，影响数据库性能。\n\n　　　　设想解决：使用数据库连接池管理数据库连接\n\n　　②、问题二：将 sql 语句硬编码到程序中，如果sql语句修改了，那么需要重新编译 Java 代码，不利于系统维护\n\n　　　　设想解决：将 sql 语句配置到 xml 文件中，即使 sql 语句变化了，我们也不需要对 Java 代码进行修改，重新编译\n\n　　③、问题三：在 PreparedStatement 中设置参数，对占位符设置值都是硬编码在Java代码中，不利于系统维护\n\n　　　　设想解决：将 sql 语句以及占位符和参数都配置到 xml 文件中\n\n　　④、问题四：从 resultset 中遍历结果集时，对表的字段存在硬编码，不利于系统维护\n\n　　　　设想解决：将查询的结果集自动映射为 Java 对象\n\n　　⑤、问题五：重复性代码特别多，频繁的 try-catch\n\n　　　　设想解决：将其整合到一个 try-catch 代码块中\n\n　　⑥、问题六：缓存做的很差，如果存在数据量很大的情况下，这种方式性能特别低\n\n　　　　设想解决：集成缓存框架去操作数据库\n\n　　⑦、问题七：sql 的移植性不好，如果换个数据库，那么sql 语句可能要重写\n\n　　　　设想解决：在 JDBC 和 数据库之间插入第三方框架，用第三方去生成 sql 语句，屏蔽数据库的差异\n\n　　既然直接使用 JDBC 操作数据库有那么多的缺点，那么我们如何去解决呢？请看下面 mybatis 框架的入门实例介绍。",[[1568604301414,["GJX@GJXAIOU",[[-1,26,"](https://www.cnblogs.com/ysocean/p/7271600.html)"]],[27,75],[26,26]]],[1568604302677,["GJX@GJXAIOU",[[-1,2,"["]],[3,3],[2,2]]],[1568604305854,["GJX@GJXAIOU",[[-1,27,"**目录**\n\n*   [1、什么是MyBatis?](https://www.cnblogs.com/ysocean/p/7271600.html#_label0)\n*   [2、为什么会有 MyBatis?](https://www.cnblogs.com/ysocean/p/7271600.html#_label1)\n*   [3、分析](https://www.cnblogs.com/ysocean/p/7271600.html#_label2)\n\n* * *\n\n[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)"]],[27,329],[27,27]]],[1568604309349,["GJX@GJXAIOU",[[-1,31,"#"]],[31,31],[45,45]]],[1568604328398,["GJX@GJXAIOU",[[1,204,"**"],[1,218,"**"]],[204,218],[204,222]]],[1568604373973,["GJX@GJXAIOU",[[1,354,"**"],[1,450,"**"]],[354,450],[354,454]]],[1568604376908,["GJX@GJXAIOU",[[-1,457,"[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)\n"]],[456,521],[456,456]]],[1568604377341,["GJX@GJXAIOU",[[-1,457,"\n"]],[456,456],[455,455]]],[1568604379661,["GJX@GJXAIOU",[[-1,459,"#"]],[458,458],[476,476]]],[1568604393887,["GJX@GJXAIOU",[[-1,593," "],[1,594," "],[-1,657," "],[1,658," "],[1,669,"·"],[-1,742," "],[1,743," "],[-1,750," "],[1,751," "],[-1,772," "],[1,773," "],[-1,795," "],[1,796," "],[-1,821," "],[1,822," "],[-1,849," "],[1,850," "],[-1,871," "],[1,872," "],[-1,878," "],[1,879," "],[-1,935," "],[1,936," "],[-1,967," "],[1,968," "],[-1,991," "],[1,992," "],[-1,998," "],[1,999," "],[-1,1072," "],[1,1073," "],[-1,1445," "],[1,1446," "],[-1,1469," "],[1,1470," "],[-1,1502," "],[1,1503," "],[-1,1538," "],[1,1539," "],[-1,1578," "],[1,1579," "],[-1,1610," "],[1,1611," "],[-1,1645," "],[1,1646," "],[-1,1677," "],[1,1678," "],[-1,1710," "],[1,1711," "],[-1,1738," "],[1,1739," "],[-1,1777," "],[1,1778," "],[-1,1809," "],[1,1810," "],[-1,1817," "],[1,1818," "],[-1,1855," "],[1,1856," "],[-1,1864," "],[1,1865," "],[-1,1886," "],[1,1887," "],[-1,1940," "],[1,1941," "],[-1,1949," "],[1,1950," "],[-1,1968," "],[1,1969," "],[-1,2004," "],[1,2005," "],[-1,2013," "],[1,2014," "],[-1,2032," "],[1,2033," "],[-1,2070," "],[1,2071," "],[-1,2079," "],[1,2080," "],[-1,2093," "],[1,2094," "],[-1,2157," "],[1,2158," "],[-1,2166," "],[1,2167," "],[-1,2185," "],[1,2186," "],[-1,2257," "],[1,2258," "],[-1,2266," "],[1,2267," "],[-1,2290," "],[1,2291," "],[-1,2324," "],[1,2325," "],[-1,2333," "],[1,2334," "],[-1,2349," "],[1,2350," "],[-1,2435," "],[1,2436," "],[-1,2444," "],[1,2445," "],[-1,2495," "],[1,2496," "],[-1,2502," "],[1,2503," "],[-1,2526," "],[1,2527," "],[-1,2688," "],[1,2689," "],[-1,2862," "],[1,2863," "],[-1,2939," "],[1,2940," "],[-1,2968," "],[1,2969," "],[-1,2975," "],[1,2976," "],[-1,3080," "],[1,3081," "],[-1,3089," "],[1,3090," "],[-1,3191," "],[1,3192," "],[-1,3214," "],[1,3215," "],[-1,3223," "],[1,3224," "],[-1,3308," "],[1,3309," "],[-1,3331," "],[1,3332," "],[-1,3340," "],[1,3341," "],[-1,3427," "],[1,3428," "],[-1,3452," "],[1,3453," "],[-1,3461," "],[1,3462," "],[-1,3531," "],[1,3532," "],[-1,3554," "],[1,3555," "],[-1,3563," "],[1,3564," "],[-1,3570," "],[1,3571," "],[-1,3988," "],[1,3989," "]],[669,669],[670,670]]],[1568604394157,["GJX@GJXAIOU",[[1,670,"·"]],[670,670],[671,671]]],[1568604395414,["GJX@GJXAIOU",[[-1,669,"··"]],[671,671],[669,669]]],[1568604397055,["GJX@GJXAIOU",[[1,669,"```"]],[669,669],[672,672]]],[1568604397096,["GJX@GJXAIOU",[[1,672,"language\n```\n"]],[672,672],[672,680]]],[1568604398808,["GJX@GJXAIOU",[[-1,672,"language"],[1,680,"p"]],[672,680],[673,673]]],[1568604399878,["GJX@GJXAIOU",[[1,673,"erso"]],[673,673],[677,677]]],[1568604401655,["GJX@GJXAIOU",[[1,677,"n_java"]],[677,677],[683,683]]],[1568604402213,["GJX@GJXAIOU",[[1,684,"\n"]],[683,683],[684,684]]],[1568604403350,["GJX@GJXAIOU",[[1,684,"`public` `class` `Person {`\n\n`private` `Long pid;`\n\n`private` `String pname;`\n\n`public` `Long getPid() {`\n\n`return` `pid;`\n\n`}`\n\n`public` `void` `setPid(Long pid) {`\n\n`this``.pid = pid;`\n\n`}`\n\n`public` `String getPname() {`\n\n`return` `pname;`\n\n`}`\n\n`public` `void` `setPname(String pname) {`\n\n`this``.pname = pname;`\n\n`}`\n\n`}`"]],[684,684],[1010,1010]]],[1568604404857,["GJX@GJXAIOU",[[-1,684,"`public` `class` `Person {`\n\n`private` `Long pid;`\n\n`private` `String pname;`\n\n`public` `Long getPid() {`\n\n`return` `pid;`\n\n`}`\n\n`public` `void` `setPid(Long pid) {`\n\n`this``.pid = pid;`\n\n`}`\n\n`public` `String getPname() {`\n\n`return` `pname;`\n\n`}`\n\n`public` `void` `setPname(String pname) {`\n\n`this``.pname = pname;`\n\n`}`\n\n`}`"]],[1010,1010],[684,684]]],[1568604408126,["GJX@GJXAIOU",[[1,684,"public class Person {\n    private Long pid;\n    private String pname;\n    public Long getPid() {\n        return pid;\n    }\n    public void setPid(Long pid) {\n        this.pid = pid;\n    }\n    public String getPname() {\n        return pname;\n    }\n    public void setPname(String pname) {\n        this.pname = pname;\n    }\n}"]],[684,684],[1007,1007]]],[1568604413403,["GJX@GJXAIOU",[[-1,1013,"| \n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n | \n\n`public` `class` `Person {`\n\n`private` `Long pid;`\n\n`private` `String pname;`\n\n`public` `Long getPid() {`\n\n`return` `pid;`\n\n`}`\n\n`public` `void` `setPid(Long pid) {`\n\n`this``.pid = pid;`\n\n`}`\n\n`public` `String getPname() {`\n\n`return` `pname;`\n\n`}`\n\n`public` `void` `setPname(String pname) {`\n\n`this``.pname = pname;`\n\n`}`\n\n`}`\n\n |\n"]],[1013,1408],[1013,1013]]],[1568618391690,["GJX@GJXAIOU",[[-1,618,"　　"]],[618,620],[618,618]]],[1568618393427,["GJX@GJXAIOU",[[-1,653,"　　"]],[653,655],[653,653]]],[1568618401186,["GJX@GJXAIOU",[[-1,750,"    public Long getPid() {\n        return pid;\n    }\n    public void setPid(Long pid) {\n        this.pid = pid;\n    }\n    public String getPname() {\n        return pname;\n    }\n    public void setPname(String pname) {\n        this.pname = pname;\n    }"]],[750,1001],[750,750]]],[1568618403428,["GJX@GJXAIOU",[[1,750,"    \n"]],[749,749],[754,754]]],[1568618414528,["GJX@GJXAIOU",[[1,754,"// 省略 set、get 方法"]],[754,754],[770,770]]],[1568618417659,["GJX@GJXAIOU",[[-1,771,"\n"]],[771,771],[770,770]]],[1568618436955,["GJX@GJXAIOU",[[-1,778,"\n　　"]],[778,781],[778,778]]],[1568618437434,["GJX@GJXAIOU",[[-1,777,"\n"]],[778,778],[777,777]]],[1568618438746,["GJX@GJXAIOU",[[1,777,"\n"]],[777,777],[778,778]]],[1568618450411,["GJX@GJXAIOU",[[-1,790,"| \n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n66\n\n67\n\n68\n\n69\n\n70\n\n71\n\n72\n\n73\n\n74\n\n75\n\n76\n\n77\n\n78\n\n79\n\n80\n\n81\n\n82\n\n83\n\n84\n\n85\n\n86\n\n87\n\n88\n\n89\n\n | \n\n`package` `com.ys.dao;`\n\n`import` `java.sql.Connection;`\n\n`import` `java.sql.DriverManager;`\n\n`import` `java.sql.PreparedStatement;`\n\n`import` `java.sql.ResultSet;`\n\n`import` `java.sql.SQLException;`\n\n`import` `java.sql.Statement;`\n\n`import` `java.util.ArrayList;`\n\n`import` `java.util.List;`\n\n`import` `javax.swing.DebugGraphics;`\n\n`import` `com.ys.bean.Person;`\n\n`public` `class` `CRUDDao {`\n\n`//MySQL数据库驱动`\n\n`public` `static` `String driverClass = ``\"com.mysql.jdbc.Driver\"``;`\n\n`//MySQL用户名`\n\n`public` `static` `String userName = ``\"root\"``;`\n\n`//MySQL密码`\n\n`public` `static` `String passWord = ``\"root\"``;`\n\n`//MySQL URL`\n\n`public` `static` `String url = ``\"jdbc:mysql://localhost:3306/test\"``;`\n\n`//定义数据库连接`\n\n`public` `static` `Connection conn = ``null``;`\n\n`//定义声明数据库语句,使用 预编译声明 PreparedStatement提高数据库执行性能`\n\n`public` `static` `PreparedStatement ps = ``null``;`\n\n`//定义返回结果集`\n\n`public` `static` `ResultSet rs = ``null``;`\n\n`/**`\n\n`* 查询 person 表信息`\n\n`* @return：返回 person 的 list 集合`\n\n`*/`\n\n`public` `static` `List<Person> readPerson(){`\n\n`List<Person> list = ``new` `ArrayList<>();`\n\n`try` `{`\n\n`//加载数据库驱动`\n\n`Class.forName(driverClass);`\n\n`//获取数据库连接`\n\n`conn = DriverManager.getConnection(url, userName, passWord);`\n\n`//定义 sql 语句,?表示占位符`\n\n`String sql = ``\"select * from person where pname=?\"``;`\n\n`//获取预编译处理的statement`\n\n`ps = conn.prepareStatement(sql);`\n\n`//设置sql语句中的参数，第一个为sql语句中的参数的?(从1开始)，第二个为设置的参数值`\n\n`ps.setString(``1``, ``\"qzy\"``);`\n\n`//向数据库发出 sql 语句查询，并返回结果集`\n\n`rs = ps.executeQuery();`\n\n`while` `(rs.next()) {`\n\n`Person p = ``new` `Person();`\n\n`p.setPid(rs.getLong(``1``));`\n\n`p.setPname(rs.getString(``2``));`\n\n`list.add(p);`\n\n`}`\n\n`} ``catch` `(Exception e) {`\n\n`e.printStackTrace();`\n\n`}``finally``{`\n\n`//关闭数据库连接`\n\n`if``(rs!=``null``){`\n\n`try` `{`\n\n`rs.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`if``(ps!=``null``){`\n\n`try` `{`\n\n`ps.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`if``(conn!=``null``){`\n\n`try` `{`\n\n`conn.close();`\n\n`} ``catch` `(SQLException e) {`\n\n`e.printStackTrace();`\n\n`}`\n\n`}`\n\n`}`\n\n`return` `list;`\n\n`}`\n\n`public` `static` `void` `main(String[] args) {`\n\n`System.out.println(CRUDDao.readPerson());`\n\n`}`\n\n`}`\n\n |\n\n[回到顶部](https://www.cnblogs.com/ysocean/p/7271600.html#_labelTop)"]],[790,3429],[790,790]]],[1568618453434,["GJX@GJXAIOU",[[1,789,"·"]],[789,789],[790,790]]],[1568618454092,["GJX@GJXAIOU",[[-1,789,"·"]],[790,790],[789,789]]],[1568618455149,["GJX@GJXAIOU",[[1,789,"~··"]],[789,789],[792,792]]],[1568618455868,["GJX@GJXAIOU",[[-1,789,"~··"]],[792,792],[789,789]]],[1568618456261,["GJX@GJXAIOU",[[1,789,"·"]],[789,789],[790,790]]],[1568618456761,["GJX@GJXAIOU",[[-1,789,"·"]],[790,790],[789,789]]],[1568618457771,["GJX@GJXAIOU",[[1,789,"```"]],[789,789],[792,792]]],[1568618457798,["GJX@GJXAIOU",[[1,792,"language\n```\n"]],[792,792],[792,800]]],[1568618458691,["GJX@GJXAIOU",[[-1,792,"language"],[1,800,"j"]],[792,800],[793,793]]],[1568618458810,["GJX@GJXAIOU",[[1,793,"a"]],[793,793],[794,794]]],[1568618460674,["GJX@GJXAIOU",[[-1,792,"ja"]],[794,794],[792,792]]],[1568618475852,["GJX@GJXAIOU",[[1,792,"CRUDDao_java"]],[792,792],[804,804]]],[1568618476292,["GJX@GJXAIOU",[[1,805,"\n"]],[804,804],[805,805]]],[1568618479607,["GJX@GJXAIOU",[[1,805,"package com.ys.dao;\n \nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.ArrayList;\nimport java.util.List;\n \nimport javax.swing.DebugGraphics;\n \nimport com.ys.bean.Person;\n \npublic class CRUDDao {\n    //MySQL数据库驱动\n    public static String driverClass = \"com.mysql.jdbc.Driver\";\n    //MySQL用户名\n    public static String userName = \"root\";\n    //MySQL密码\n    public static String passWord = \"root\";\n    //MySQL URL\n    public static String url = \"jdbc:mysql://localhost:3306/test\";\n    //定义数据库连接\n    public static Connection conn = null;\n    //定义声明数据库语句,使用 预编译声明 PreparedStatement提高数据库执行性能\n    public static PreparedStatement ps = null;\n    //定义返回结果集\n    public static ResultSet rs = null;\n    /**\n     * 查询 person 表信息\n     * @return：返回 person 的 list 集合\n     */\n    public static List<Person> readPerson(){\n        List<Person> list = new ArrayList<>();\n        try {\n            //加载数据库驱动\n            Class.forName(driverClass);\n            //获取数据库连接\n            conn = DriverManager.getConnection(url, userName, passWord);\n            //定义 sql 语句,?表示占位符\n            String sql = \"select * from person where pname=?\";\n            //获取预编译处理的statement\n            ps = conn.prepareStatement(sql);\n            //设置sql语句中的参数，第一个为sql语句中的参数的?(从1开始)，第二个为设置的参数值\n            ps.setString(1, \"qzy\");\n            //向数据库发出 sql 语句查询，并返回结果集\n            rs = ps.executeQuery();\n            while (rs.next()) {\n                Person p = new Person();\n                p.setPid(rs.getLong(1));\n                p.setPname(rs.getString(2));\n                list.add(p);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }finally{\n            //关闭数据库连接\n            if(rs!=null){\n                try {\n                    rs.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if(ps!=null){\n                try {\n                    ps.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n            if(conn!=null){\n                try {\n                    conn.close();\n                } catch (SQLException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n         \n        return list;\n    }\n \n    public static void main(String[] args) {\n        System.out.println(CRUDDao.readPerson());\n    }\n}"]],[805,805],[3359,3359]]],[1568618497561,["GJX@GJXAIOU",[[1,1639,"\n    "]],[1639,1639],[1644,1644]]],[1568618542261,["GJX@GJXAIOU",[[1,1832," "]],[1832,1832],[1833,1833]]],[1568618544234,["GJX@GJXAIOU",[[1,1895," "]],[1895,1895],[1896,1896]]],[1568618545165,["GJX@GJXAIOU",[[1,1991," "]],[1991,1991],[1992,1992]]],[1568618547411,["GJX@GJXAIOU",[[1,2003," "]],[2003,2003],[2004,2004]]],[1568618548580,["GJX@GJXAIOU",[[1,2002," "]],[2002,2002],[2003,2003]]],[1568618555358,["GJX@GJXAIOU",[[1,2088," "]],[2088,2088],[2089,2089]]],[1568618556380,["GJX@GJXAIOU",[[1,2097," "]],[2097,2097],[2098,2098]]],[1568618557690,["GJX@GJXAIOU",[[1,2167," "]],[2167,2167],[2168,2168]]],[1568618558526,["GJX@GJXAIOU",[[1,2170," "]],[2170,2170],[2171,2171]]],[1568618559443,["GJX@GJXAIOU",[[1,2174," "]],[2174,2174],[2175,2175]]],[1568618560723,["GJX@GJXAIOU",[[1,2186," "]],[2186,2186],[2187,2187]]],[1568618562885,["GJX@GJXAIOU",[[1,2190," "]],[2190,2190],[2191,2191]]],[1568618590441,["GJX@GJXAIOU",[[-1,3383,"\n"]],[3382,3382],[3381,3381]]],[1568618591260,["GJX@GJXAIOU",[[-1,3382,"\n"]],[3382,3382],[3381,3381]]],[1568618614870,["GJX@GJXAIOU",[[-1,3392,"　　"],[-1,3414,"　　"],[-1,3485,"　　　　"],[-1,3511,"　　"],[-1,3572,"　　　　"],[-1,3640,"　　"],[-1,3704,"　　　　"],[-1,3743,"　　"],[-1,3791,"　　　　"],[-1,3822,"　　"],[-1,3854,"　　　　"],[-1,3887,"　　"],[-1,3927,"　　　　"],[-1,3950,"　　"],[-1,3992,"　　　　"],[-1,4048,"　　"]],[3394,4109],[3394,4109]]],[1568618635555,["GJX@GJXAIOU",[[-1,3616,"行"]],[3617,3617],[3616,3616]]],[1568618637247,["GJX@GJXAIOU",[[1,3616,"行"]],[3616,3616],[3617,3617]]],[1568618660555,["GJX@GJXAIOU",[[-1,3892,"\n"]],[3893,3893],[3892,3892]]],[1568618662162,["GJX@GJXAIOU",[[-1,3825,"\n"]],[3825,3825],[3824,3824]]],[1568618662985,["GJX@GJXAIOU",[[-1,3768,"\n"]],[3768,3768],[3767,3767]]],[1568618663776,["GJX@GJXAIOU",[[-1,3687,"\n"]],[3687,3687],[3686,3686]]],[1568618665250,["GJX@GJXAIOU",[[-1,3561,"\n"]],[3561,3561],[3560,3560]]],[1568618666297,["GJX@GJXAIOU",[[-1,3480,"\n"]],[3480,3480],[3479,3479]]],[1568618668921,["GJX@GJXAIOU",[[-1,3945,"\n"]],[3945,3945],[3944,3944]]],[1568621943313,["GJX@GJXAIOU",[[-1,18,"---"]],[19,19],[16,16]]]],null,"GJX@GJXAIOU"]]}