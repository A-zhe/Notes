{"compress":true,"commitItems":[["eb0b7bb5-e30e-410e-aef8-d16c5598c713",1567429124843,"# Mybatis配置之别名配置元素详述\n\n2017年05月09日 21:05:30 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 32971更多\n\n分类专栏： [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71503263](https://blog.csdn.net/andamajing/article/details/71503263) \n\n在前面的文章<[Mybatis配置之<properties>属性配置元素详述](http://blog.csdn.net/majinggogogo/article/details/71441028)>，我们讲述了<properties>标签元素的配置和使用方法。在这篇文章中，我们来说说<typeAliases>标签元素，这个元素主要是用于对类型进行别名控制，具体什么意思呢？我们下面用一个示例说明，看了之后我相信你就会明白了。\n\n这里我们贴出之前的UserDao对应的mapper文件，如下所示：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>   <!DOCTYPE mapper   PUBLIC \"-//ibatis.apache.org//DTD Mapper 3.0//EN\"  \"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd\"><mapper namespace=\"com.majing.learning.mybatis.dao.UserDao\"> \t<select id=\"findUserById\" resultType=\"com.majing.learning.mybatis.entity.User\">\t\tselect * from user where id = #{id}\t</select>\t\t<insert id=\"addUser\" parameterType=\"com.majing.learning.mybatis.entity.User\" useGeneratedKeys=\"true\" keyProperty=\"id\">\t\tinsert into user(name,password,age) values(#{name},#{password},#{age})\t</insert>\t\t<delete id=\"deleteUser\" parameterType=\"int\">\t\tdelete from user where id = #{id}\t</delete>\t\t<update id=\"updateUser\" parameterType=\"com.majing.learning.mybatis.entity.User\">\t\tupdate user set name = #{name}, password = #{password}, age = #{age} where id = #{id}\t</update> </mapper>\n```\n\n 从这个配置文件中，我们可以看到<select>、<insert>和<update>三个标签元素的resultType都是User对象，需要设置这个User对象的类全限定名，即packname.classname。\n\n我们发现一个问题，那就是这个类名，我们需要写多次，如果要改这个类名的话，我们需要在多个地方进行修改。很明显，这样配置的话很容易造成修改上的遗漏，同时也书写上也比较麻烦。因此，MyBatis为我们提供了一个简单方便的配置方法，那就是使用<typeAliases>标签元素，给实体类设置一个别名。\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE configuration  \tPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"  \t\"http://mybatis.org/dtd/mybatis-3-config.dtd\"><configuration> \t<properties resource=\"mysql.properties\">\t\t<property name=\"username\" value=\"root\"/>\t\t<property name=\"password\" value=\"root\"/>\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8\"/>\t</properties> \t<settings>\t\t<setting name=\"logImpl\" value=\"LOG4J\" />\t</settings>\t\t<typeAliases> \t\t<typeAlias alias=\"User\" type=\"com.majing.learning.mybatis.entity.User\"/> \t</typeAliases> \t<!-- 和spring整合后 environments配置将废除 -->\t<environments default=\"development\">\t\t<environment id=\"development\">\t\t\t<!-- 使用jdbc事务管理 -->\t\t\t<transactionManager type=\"JDBC\" />\t\t\t<!-- 数据库连接池 -->\t\t\t<dataSource type=\"POOLED\">\t\t\t\t<property name=\"driver\" value=\"${driver}\" />\t\t\t\t<property name=\"url\" value=\"${url}\" />\t\t\t\t<property name=\"username\" value=\"${username}\" />\t\t\t\t<property name=\"password\" value=\"${password}\" />\t\t\t</dataSource>\t\t</environment>\t</environments> \t<mappers>\t\t<mapper resource=\"com\\majing\\learning\\mybatis\\dao\\UserDaoMapper.xml\" />\t</mappers> </configuration>\n```\n\n如上所示，我们在原来的mybatis配置文件中增加了<typeAliases>标签，并将com.majing.learning.mybatis.entity.User这个实体类重命名为User，然后我们在mapper配置文件中就可以如下使用了。\n\n备注：这里需要注意的是，typeAliases配置需要放置在settings之后，否则会出异常！！！ \n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>   <!DOCTYPE mapper   PUBLIC \"-//ibatis.apache.org//DTD Mapper 3.0//EN\"  \"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd\"><mapper namespace=\"com.majing.learning.mybatis.dao.UserDao\"> \t<select id=\"findUserById\" resultType=\"User\">\t\tselect * from user where id = #{id}\t</select>\t\t<insert id=\"addUser\" parameterType=\"User\" useGeneratedKeys=\"true\" keyProperty=\"id\">\t\tinsert into user(name,password,age) values(#{name},#{password},#{age})\t</insert>\t\t<delete id=\"deleteUser\" parameterType=\"int\">\t\tdelete from user where id = #{id}\t</delete>\t\t<update id=\"updateUser\" parameterType=\"User\">\t\tupdate user set name = #{name}, password = #{password}, age = #{age} where id = #{id}\t</update> </mapper>\n```\n\n 这样即使实体类名修改了，所需要修改的地方也只有一处，便于集中管理。\n\n也许你会有疑问，如果实体类比较多怎么办？还不是要配置很多实体类和别名，NO,NO,NO！下面跟大家说说另一种配置方法。\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE configuration  \tPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"  \t\"http://mybatis.org/dtd/mybatis-3-config.dtd\"><configuration> \t<properties resource=\"mysql.properties\">\t\t<property name=\"username\" value=\"root\"/>\t\t<property name=\"password\" value=\"root\"/>\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8\"/>\t</properties> \t<settings>\t\t<setting name=\"logImpl\" value=\"LOG4J\" />\t</settings>\t\t<typeAliases>\t\t<package name=\"com.majing.learning.mybatis.entity\"/>\t</typeAliases> \t<!-- 和spring整合后 environments配置将废除 -->\t<environments default=\"development\">\t\t<environment id=\"development\">\t\t\t<!-- 使用jdbc事务管理 -->\t\t\t<transactionManager type=\"JDBC\" />\t\t\t<!-- 数据库连接池 -->\t\t\t<dataSource type=\"POOLED\">\t\t\t\t<property name=\"driver\" value=\"${driver}\" />\t\t\t\t<property name=\"url\" value=\"${url}\" />\t\t\t\t<property name=\"username\" value=\"${username}\" />\t\t\t\t<property name=\"password\" value=\"${password}\" />\t\t\t</dataSource>\t\t</environment>\t</environments> \t<mappers>\t\t<mapper resource=\"com\\majing\\learning\\mybatis\\dao\\UserDaoMapper.xml\" />\t</mappers> </configuration>\n```\n\n 在这里，我们不再使用<typeAliases>标签下<typeAliase>，而是使用<package>标签，表示扫描该包名下的所有类（除了接口和匿名内部类），如果类名上有注解，则使用注解指定的名称作为别名，如果没有则使用类名首字母小写作为别名，如com.majing.learning.mybatis.entity.User这个类如果没有设置@Alias注解，则此时会被关联到user这个别名上。\n\n因此，按照上面的配置，我们还需要将实体类做一下调整，如下两种方式所示：\n\n（1）给实体类添加@Alias注解 \n\n```\npackage com.majing.learning.mybatis.entity; import org.apache.ibatis.type.Alias; @Alias(value=\"User\")public class User {\tprivate int id;\tprivate String name;\tprivate String password;\tprivate int age;\tpublic int getId() {\t\treturn id;\t}\tpublic void setId(int id) {\t\tthis.id = id;\t}\tpublic String getName() {\t\treturn name;\t}\tpublic void setName(String name) {\t\tthis.name = name;\t}\tpublic String getPassword() {\t\treturn password;\t}\tpublic void setPassword(String password) {\t\tthis.password = password;\t}\t@Override\tpublic String toString() {\t\treturn \"User [id=\" + id + \", name=\" + name + \", password=\" + password + \", age=\" + age + \"]\";\t}\tpublic int getAge() {\t\treturn age;\t}\tpublic void setAge(int age) {\t\tthis.age = age;\t} \t\t}\n```\n\n （2）实体类不加注解的情况下，修改mapper文件中引用的类型别名，改为小写，如下所示：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>   <!DOCTYPE mapper   PUBLIC \"-//ibatis.apache.org//DTD Mapper 3.0//EN\"  \"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd\"><mapper namespace=\"com.majing.learning.mybatis.dao.UserDao\"> \t<select id=\"findUserById\" resultType=\"user\">\t\tselect * from user where id = #{id}\t</select>\t\t<insert id=\"addUser\" parameterType=\"user\" useGeneratedKeys=\"true\" keyProperty=\"id\">\t\tinsert into user(name,password,age) values(#{name},#{password},#{age})\t</insert>\t\t<delete id=\"deleteUser\" parameterType=\"int\">\t\tdelete from user where id = #{id}\t</delete>\t\t<update id=\"updateUser\" parameterType=\"user\">\t\tupdate user set name = #{name}, password = #{password}, age = #{age} where id = #{id}\t</update> </mapper>\n```\n\n最后想说，mybatis为我们已经实现了很多别名，已经为许多常见的 Java 类型内建了相应的类型别名。它们都是大小写不敏感的，需要注意的是由基本类型名称重复导致的特殊处理。\n\n| 别名 | 映射的类型 |\n| --- | --- |\n| _byte | byte |\n| _long | long |\n| _short | short |\n| _int | int |\n| _integer | int |\n| _double | double |\n| _float | float |\n| _boolean | boolean |\n| string | String |\n| byte | Byte |\n| long | Long |\n| short | Short |\n| int | Integer |\n| integer | Integer |\n| double | Double |\n| float | Float |\n| boolean | Boolean |\n| date | Date |\n| decimal | BigDecimal |\n| bigdecimal | BigDecimal |\n| object | Object |\n| map | Map |\n| hashmap | HashMap |\n| list | List |\n| arraylist | ArrayList |\n| collection | Collection |\n| iterator | Iterator |\n\n  至此，关于别名的全部使用方法这里便介绍完成了，是不是很简单![奋斗](http://static.blog.csdn.net/xheditor/xheditor_emot/default/struggle.gif)",[[1567429122624,["GJX@GJXAIOU",[[-1,22,"2017年05月09日 21:05:30 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 32971更多\n\n分类专栏： [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71503263](https://blog.csdn.net/andamajing/article/details/71503263) "]],[22,543],[22,22]]],[1567429133185,["GJX@GJXAIOU",[[1,22,"[原文链接](https://blog.csdn.net/andamajing/article/details/71503263)"]],[22,22],[87,87]]],[1567429142791,["GJX@GJXAIOU",[[-1,95,"<["]],[97,97],[95,95]]],[1567429147577,["GJX@GJXAIOU",[[-1,125,"](http://blog.csdn.net/majinggogogo/article/details/71441028)>"]],[125,187],[125,125]]],[1567429643161,["GJX@GJXAIOU",[[1,322,"\n"],[1,341,"\n"],[1,392,"\n"],[1,443,"\n"],[1,503,"\n"],[1,504,"\n"],[1,584,"\n"],[1,621,"\n"],[1,631,"\n"],[1,632,"\n"],[1,751,"\n"],[1,823,"\n"],[1,833,"\n"],[1,834,"\n"],[1,879,"\n"],[1,914,"\n"],[1,924,"\n"],[1,925,"\n"],[1,1006,"\n"],[1,1093,"\n"],[1,1103,"\n"],[1,1104,"\n"]],[280,1113],[1135,1135]]],[1567429734851,["GJX@GJXAIOU",[[-1,275,"\n"]],[275,275],[274,274]]],[1567430018586,["GJX@GJXAIOU",[[1,168,"**"],[1,204,"**"]],[168,204],[168,208]]],[1567430548154,["GJX@GJXAIOU",[[1,1340,"**"],[1,1398,"**"]],[1340,1398],[1340,1402]]],[1567430563178,["GJX@GJXAIOU",[[1,1447,"\n"],[1,1472,"\n"],[1,1518,"\n"],[1,1565,"\n"],[1,1580,"\n"],[1,1581,"\n"],[1,1622,"\n"],[1,1664,"\n"],[1,1706,"\n"],[1,1763,"\n"],[1,1855,"\n"],[1,1869,"\n"],[1,1870,"\n"],[1,1881,"\n"],[1,1923,"\n"],[1,1935,"\n"],[1,1936,"\n"],[1,1950,"\n"],[1,2026,"\n"],[1,2041,"\n"],[1,2042,"\n"],[1,2080,"\n"],[1,2117,"\n"],[1,2149,"\n"],[1,2171,"\n"],[1,2208,"\n"],[1,2226,"\n"],[1,2255,"\n"],[1,2303,"\n"],[1,2345,"\n"],[1,2397,"\n"],[1,2449,"\n"],[1,2465,"\n"],[1,2481,"\n"],[1,2497,"\n"],[1,2498,"\n"],[1,2508,"\n"],[1,2581,"\n"],[1,2592,"\n"],[1,2593,"\n"]],[1409,2609],[2649,2649]]],[1567430627101,["GJX@GJXAIOU",[[1,1952,"《》"]],[1952,1952],[1954,1954]]],[1567430628250,["GJX@GJXAIOU",[[-1,1952,"《》"]],[1954,1954],[1952,1952]]],[1567430628917,["GJX@GJXAIOU",[[1,1952,"<>"]],[1952,1952],[1954,1954]]],[1567430637660,["GJX@GJXAIOU",[[1,1953,"!-----------------------------------------------------------"]],[1953,1953],[2013,2013]]],[1567430639897,["GJX@GJXAIOU",[[-1,2007,"------"]],[2013,2013],[2007,2007]]],[1567430644250,["GJX@GJXAIOU",[[1,1952,"\n\t"]],[1952,1952],[1954,1954]]],[1567430651539,["GJX@GJXAIOU",[[1,2120,"  <!----------------------------------------------------->"]],[2120,2120],[2178,2178]]],[1567430652809,["GJX@GJXAIOU",[[1,2179,"   \n"]],[2178,2178],[2182,2182]]],[1567430657627,["GJX@GJXAIOU",[[1,2122,"    "]],[2122,2122],[2126,2126]]],[1567430673411,["GJX@GJXAIOU",[[1,2786,"**"],[1,2875,"**"]],[2786,2875],[2786,2879]]],[1567430682953,["GJX@GJXAIOU",[[1,2919,"**"],[1,2947,"**"]],[2919,2947],[2919,2951]]],[1567430694533,["GJX@GJXAIOU",[[1,3010,"\n"],[1,3029,"\n"],[1,3080,"\n"],[1,3131,"\n"],[1,3191,"\n"],[1,3192,"\n"],[1,3237,"\n"],[1,3274,"\n"],[1,3284,"\n"],[1,3285,"\n"],[1,3369,"\n"],[1,3441,"\n"],[1,3451,"\n"],[1,3452,"\n"],[1,3497,"\n"],[1,3532,"\n"],[1,3542,"\n"],[1,3543,"\n"],[1,3589,"\n"],[1,3676,"\n"],[1,3686,"\n"],[1,3687,"\n"]],[2968,3696],[3718,3718]]],[1567430716853,["GJX@GJXAIOU",[[1,3863,"\n"],[1,3888,"\n"],[1,3934,"\n"],[1,3981,"\n"],[1,3996,"\n"],[1,3997,"\n"],[1,4038,"\n"],[1,4080,"\n"],[1,4122,"\n"],[1,4179,"\n"],[1,4271,"\n"],[1,4285,"\n"],[1,4286,"\n"],[1,4297,"\n"],[1,4339,"\n"],[1,4351,"\n"],[1,4352,"\n"],[1,4366,"\n"],[1,4420,"\n"],[1,4435,"\n"],[1,4436,"\n"],[1,4474,"\n"],[1,4511,"\n"],[1,4543,"\n"],[1,4565,"\n"],[1,4602,"\n"],[1,4620,"\n"],[1,4649,"\n"],[1,4697,"\n"],[1,4739,"\n"],[1,4791,"\n"],[1,4843,"\n"],[1,4859,"\n"],[1,4875,"\n"],[1,4891,"\n"],[1,4892,"\n"],[1,4902,"\n"],[1,4975,"\n"],[1,4986,"\n"],[1,4987,"\n"]],[3825,5003],[5043,5043]]],[1567430740883,["GJX@GJXAIOU",[[1,5054,"**"],[1,5248,"**"]],[5054,5248],[5054,5252]]],[1567430772825,["GJX@GJXAIOU",[[1,5176,"·"]],[5176,5176],[5177,5177]]],[1567430774853,["GJX@GJXAIOU",[[-1,5176,"·"]],[5177,5177],[5176,5176]]],[1567430775380,["GJX@GJXAIOU",[[1,5176,"`"]],[5176,5176],[5177,5177]]],[1567430777419,["GJX@GJXAIOU",[[1,5216,"`"]],[5216,5216],[5217,5217]]],[1567430799322,["GJX@GJXAIOU",[[1,5361,"\n"],[1,5362,"\n"],[1,5398,"\n"],[1,5399,"\n"],[1,5419,"\n"],[1,5438,"\n"],[1,5454,"\n"],[1,5475,"\n"],[1,5500,"\n"],[1,5517,"\n"],[1,5538,"\n"],[1,5550,"\n"],[1,5552,"\n"],[1,5580,"\n"],[1,5595,"\n"],[1,5597,"\n"],[1,5623,"\n"],[1,5637,"\n"],[1,5639,"\n"],[1,5674,"\n"],[1,5693,"\n"],[1,5695,"\n"],[1,5725,"\n"],[1,5743,"\n"],[1,5745,"\n"],[1,5788,"\n"],[1,5815,"\n"],[1,5817,"\n"],[1,5827,"\n"],[1,5854,"\n"],[1,5949,"\n"],[1,5951,"\n"],[1,5973,"\n"],[1,5986,"\n"],[1,5988,"\n"],[1,6018,"\n"],[1,6035,"\n"],[1,6037,"\n"],[1,6038,"\n"],[1,6039,"\n"],[1,6040,"\n"]],[5318,6041],[6082,6082]]],[1567430831618,["GJX@GJXAIOU",[[-1,5444,"\tprivate int id;\n\tprivate String name;\n\tprivate String password;\n\tprivate int age;\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", name=\" + name + \", password=\" + password + \", age=\" + age + \"]\";\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n "]],[5444,6076],[5444,5444]]],[1567430834060,["GJX@GJXAIOU",[[1,5444,"// juj"]],[5444,5444],[5450,5450]]],[1567430834821,["GJX@GJXAIOU",[[-1,5447,"juj"]],[5450,5450],[5447,5447]]],[1567430835644,["GJX@GJXAIOU",[[1,5447,"Juti"]],[5447,5447],[5451,5451]]],[1567430836492,["GJX@GJXAIOU",[[-1,5447,"Juti"]],[5451,5451],[5447,5447]]],[1567430837180,["GJX@GJXAIOU",[[1,5447,"JUT"]],[5447,5447],[5450,5450]]],[1567430837777,["GJX@GJXAIOU",[[-1,5446," JUT"]],[5450,5450],[5446,5446]]],[1567430843077,["GJX@GJXAIOU",[[1,5446," 具体类的内容"]],[5446,5446],[5453,5453]]],[1567430844634,["GJX@GJXAIOU",[[-1,5454,"\t"]],[5455,5455],[5454,5454]]],[1567430844777,["GJX@GJXAIOU",[[-1,5454,"\n"]],[5454,5454],[5453,5453]]],[1567430998681,["GJX@GJXAIOU",[[-1,4458,"<!-- 和spring整合后 environments配置将废除 -->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<!-- 使用jdbc事务管理 -->\n\t\t\t<transactionManager type=\"JDBC\" />\n\t\t\t<!-- 数据库连接池 -->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"${driver}\" />\n\t\t\t\t<property name=\"url\" value=\"${url}\" />\n\t\t\t\t<property name=\"username\" value=\"${username}\" />\n\t\t\t\t<property name=\"password\" value=\"${password}\" />\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n \n\t<mappers>\n\t\t<mapper resource=\"com\\majing\\learning\\mybatis\\dao\\UserDaoMapper.xml\" />\n\t</mappers>"]],[4458,5024],[4458,4458]]],[1567431001484,["GJX@GJXAIOU",[[1,4458,"、、"]],[4458,4458],[4460,4460]]],[1567431002180,["GJX@GJXAIOU",[[-1,4458,"、、"]],[4460,4460],[4458,4458]]],[1567431003643,["GJX@GJXAIOU",[[1,4458,"《》"]],[4458,4458],[4460,4460]]],[1567431004121,["GJX@GJXAIOU",[[-1,4458,"《》"]],[4460,4460],[4458,4458]]],[1567431004892,["GJX@GJXAIOU",[[1,4458,"<>"]],[4458,4458],[4460,4460]]],[1567431006828,["GJX@GJXAIOU",[[1,4459,"~"]],[4459,4459],[4460,4460]]],[1567431007337,["GJX@GJXAIOU",[[-1,4459,"~"]],[4460,4460],[4459,4459]]],[1567431010715,["GJX@GJXAIOU",[[1,4459,"!-------"]],[4459,4459],[4467,4467]]],[1567431012869,["GJX@GJXAIOU",[[1,4463,"shegn"]],[4463,4463],[4468,4468]]],[1567431013724,["GJX@GJXAIOU",[[-1,4463,"shegn"]],[4468,4468],[4463,4463]]],[1567431019509,["GJX@GJXAIOU",[[1,4463,"省略其他配置"]],[4463,4463],[4469,4469]]],[1567431028180,["GJX@GJXAIOU",[[-1,4047,"<property name=\"username\" value=\"root\"/>\n\t\t<property name=\"password\" value=\"root\"/>\n\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8\"/>"]],[4047,4281],[4047,4047]]],[1567431040197,["GJX@GJXAIOU",[[-1,2188,"<!-- 和spring整合后 environments配置将废除 -->\n\t<environments default=\"development\">\n\t\t<environment id=\"development\">\n\t\t\t<!-- 使用jdbc事务管理 -->\n\t\t\t<transactionManager type=\"JDBC\" />\n\t\t\t<!-- 数据库连接池 -->\n\t\t\t<dataSource type=\"POOLED\">\n\t\t\t\t<property name=\"driver\" value=\"${driver}\" />\n\t\t\t\t<property name=\"url\" value=\"${url}\" />\n\t\t\t\t<property name=\"username\" value=\"${username}\" />\n\t\t\t\t<property name=\"password\" value=\"${password}\" />\n\t\t\t</dataSource>\n\t\t</environment>\n\t</environments>\n \n\t<mappers>\n\t\t<mapper resource=\"com\\majing\\learning\\mybatis\\dao\\UserDaoMapper.xml\" />\n\t</mappers>"]],[2188,2754],[2188,2188]]],[1567431050540,["GJX@GJXAIOU",[[1,2188,"<!---省略其他配置---->"]],[2188,2188],[2204,2204]]],[1567431052788,["GJX@GJXAIOU",[[-1,2125," <!----------------------------------------------------->"]],[2125,2182],[2125,2125]]],[1567431054665,["GJX@GJXAIOU",[[-1,1953,"\t<!----------------------------------------------------->"]],[1953,2010],[1953,1953]]],[1567431055090,["GJX@GJXAIOU",[[-1,1953,"\n"]],[1953,1953],[1952,1952]]],[1567431056905,["GJX@GJXAIOU",[[-1,2068,"   "]],[2071,2071],[2068,2068]]],[1567431057482,["GJX@GJXAIOU",[[-1,2068,"\n"]],[2068,2068],[2067,2067]]],[1567431063665,["GJX@GJXAIOU",[[-1,1630,"\t<property name=\"username\" value=\"root\"/>\n\t\t<property name=\"password\" value=\"root\"/>\n\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n\t\t<property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8\"/>"]],[1631,1865],[1630,1630]]],[1567431097362,["GJX@GJXAIOU",[[1,3868,"\n"],[1,3887,"\n"],[1,3938,"\n"],[1,3989,"\n"],[1,4049,"\n"],[1,4050,"\n"],[1,4095,"\n"],[1,4132,"\n"],[1,4142,"\n"],[1,4143,"\n"],[1,4227,"\n"],[1,4299,"\n"],[1,4309,"\n"],[1,4310,"\n"],[1,4355,"\n"],[1,4390,"\n"],[1,4400,"\n"],[1,4401,"\n"],[1,4447,"\n"],[1,4534,"\n"],[1,4544,"\n"],[1,4545,"\n"]],[3826,4554],[4576,4576]]],[1567431135298,["GJX@GJXAIOU",[[-1,5264,"，是不是很简单![奋斗](http://static.blog.csdn.net/xheditor/xheditor_emot/default/struggle.gif)"]],[5264,5349],[5264,5264]]],[1567431135892,["GJX@GJXAIOU",[[1,5264,"。"]],[5264,5264],[5265,5265]]]],null,"GJX@GJXAIOU"]]}