{"compress":true,"commitItems":[["b7c3e77a-80a5-4c34-92f4-dc5defe091a6",1567428304778,"# Mybatis的配置文件入门介绍\n\n2017年05月08日 13:06:55 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 1228 文章标签： [mybatis](https://so.csdn.net/so/search/s.do?q=mybatis&t=blog)[数据库](https://so.csdn.net/so/search/s.do?q=%E6%95%B0%E6%8D%AE%E5%BA%93&t=blog)[源码](https://so.csdn.net/so/search/s.do?q=%E6%BA%90%E7%A0%81&t=blog)[架构](https://so.csdn.net/so/search/s.do?q=%E6%9E%B6%E6%9E%84&t=blog) 更多\n\n分类专栏： [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71405243](https://blog.csdn.net/andamajing/article/details/71405243) \n\n从前面的几篇文章，我们看到了，如何简单的使用Mybatis。从这篇文章开始，我们将从其核心配置文件入手，对Mybatis支持的核心配置文件进行简单详细的描述。\n\n从下面这段代码是我们在使用mybatis前的配置初始化过程，我们通过阅读其源码来逐步了解内部实现原理。\n\n```\n// Mybatis 通过SqlSessionFactory获取SqlSession, 然后才能通过SqlSession与数据库进行交互\tprivate static SqlSessionFactory getSessionFactory() {\t\tSqlSessionFactory sessionFactory = null;\t\tString resource = \"configuration.xml\";\t\ttry {\t\t\tsessionFactory = new SqlSessionFactoryBuilder().build(Resources.getResourceAsReader(resource));\t\t} catch (IOException e) {\t\t\te.printStackTrace();\t\t}\t\treturn sessionFactory;\t}\n```\n\n 我们进入到SqlSessionFactoryBuilder类里面，查看其源码：\n\n```\n/** *    Copyright 2009-2016 the original author or authors. * *    Licensed under the Apache License, Version 2.0 (the \"License\"); *    you may not use this file except in compliance with the License. *    You may obtain a copy of the License at * *       http://www.apache.org/licenses/LICENSE-2.0 * *    Unless required by applicable law or agreed to in writing, software *    distributed under the License is distributed on an \"AS IS\" BASIS, *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *    See the License for the specific language governing permissions and *    limitations under the License. */package org.apache.ibatis.session; import java.io.IOException;import java.io.InputStream;import java.io.Reader;import java.util.Properties; import org.apache.ibatis.builder.xml.XMLConfigBuilder;import org.apache.ibatis.exceptions.ExceptionFactory;import org.apache.ibatis.executor.ErrorContext;import org.apache.ibatis.session.defaults.DefaultSqlSessionFactory; /** * Builds {@link SqlSession} instances. * * @author Clinton Begin */public class SqlSessionFactoryBuilder {   public SqlSessionFactory build(Reader reader) {    return build(reader, null, null);  }   public SqlSessionFactory build(Reader reader, String environment) {    return build(reader, environment, null);  }   public SqlSessionFactory build(Reader reader, Properties properties) {    return build(reader, null, properties);  }   public SqlSessionFactory build(Reader reader, String environment, Properties properties) {    try {      XMLConfigBuilder parser = new XMLConfigBuilder(reader, environment, properties);      return build(parser.parse());    } catch (Exception e) {      throw ExceptionFactory.wrapException(\"Error building SqlSession.\", e);    } finally {      ErrorContext.instance().reset();      try {        reader.close();      } catch (IOException e) {        // Intentionally ignore. Prefer previous error.      }    }  }   public SqlSessionFactory build(InputStream inputStream) {    return build(inputStream, null, null);  }   public SqlSessionFactory build(InputStream inputStream, String environment) {    return build(inputStream, environment, null);  }   public SqlSessionFactory build(InputStream inputStream, Properties properties) {    return build(inputStream, null, properties);  }   public SqlSessionFactory build(InputStream inputStream, String environment, Properties properties) {    try {      XMLConfigBuilder parser = new XMLConfigBuilder(inputStream, environment, properties);      return build(parser.parse());    } catch (Exception e) {      throw ExceptionFactory.wrapException(\"Error building SqlSession.\", e);    } finally {      ErrorContext.instance().reset();      try {        inputStream.close();      } catch (IOException e) {        // Intentionally ignore. Prefer previous error.      }    }  }      public SqlSessionFactory build(Configuration config) {    return new DefaultSqlSessionFactory(config);  } }\n```\n\n 在这个类中，支持多种构造SqlSessionFactory的方法。可以只传入mybatis配置文件，也可以同时传入properties配置文件替代mybatis配置文件中的<properties>元素标签，另外也支持传入环境参数envirmont参数。\n\n我们跟随着源码继续往下看：\n\n```\n public SqlSessionFactory build(Reader reader, String environment, Properties properties) {    try {      XMLConfigBuilder parser = new XMLConfigBuilder(reader, environment, properties);      return build(parser.parse());    } catch (Exception e) {      throw ExceptionFactory.wrapException(\"Error building SqlSession.\", e);    } finally {      ErrorContext.instance().reset();      try {        reader.close();      } catch (IOException e) {        // Intentionally ignore. Prefer previous error.      }    }  }\n```\n\n 这里创建了一个XMLConfigBuilder类实例，通过他来对mybatis配置文件（一个xml配置文件）进行解析。解析的代码入口如下所示：\n\n```\npublic Configuration parse() {    if (parsed) {      throw new BuilderException(\"Each XMLConfigBuilder can only be used once.\");    }    parsed = true;    parseConfiguration(parser.evalNode(\"/configuration\"));    return configuration;  }   private void parseConfiguration(XNode root) {    try {      Properties settings = settingsAsPropertiess(root.evalNode(\"settings\"));      //issue #117 read properties first      propertiesElement(root.evalNode(\"properties\"));      loadCustomVfs(settings);      typeAliasesElement(root.evalNode(\"typeAliases\"));      pluginElement(root.evalNode(\"plugins\"));      objectFactoryElement(root.evalNode(\"objectFactory\"));      objectWrapperFactoryElement(root.evalNode(\"objectWrapperFactory\"));      reflectorFactoryElement(root.evalNode(\"reflectorFactory\"));      settingsElement(settings);      // read it after objectFactory and objectWrapperFactory issue #631      environmentsElement(root.evalNode(\"environments\"));      databaseIdProviderElement(root.evalNode(\"databaseIdProvider\"));      typeHandlerElement(root.evalNode(\"typeHandlers\"));      mapperElement(root.evalNode(\"mappers\"));    } catch (Exception e) {      throw new BuilderException(\"Error parsing SQL Mapper Configuration. Cause: \" + e, e);    }  }\n```\n\n 从这里看出，配置文件是以configuration为根节点，在根节点之下有多个子节点，它们分别为：settings、properties、typeAliases、plugins、objectFactory、objectWrapperFactory、environments、databaseIdProvider、typeHandlers、mappers。",[[1567428302400,["GJX@GJXAIOU",[[-1,20,"2017年05月08日 13:06:55 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 1228 文章标签： [mybatis](https://so.csdn.net/so/search/s.do?q=mybatis&t=blog)[数据库](https://so.csdn.net/so/search/s.do?q=%E6%95%B0%E6%8D%AE%E5%BA%93&t=blog)[源码](https://so.csdn.net/so/search/s.do?q=%E6%BA%90%E7%A0%81&t=blog)[架构](https://so.csdn.net/so/search/s.do?q=%E6%9E%B6%E6%9E%84&t=blog) 更多\n\n分类专栏： [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71405243](https://blog.csdn.net/andamajing/article/details/71405243) "]],[20,824],[20,20]]],[1567428315197,["GJX@GJXAIOU",[[1,20,"[原文地址](https://blog.csdn.net/andamajing/article/details/71405243)"]],[20,20],[85,85]]],[1567428327889,["GJX@GJXAIOU",[[1,4411,"\n"],[1,4428,"\n"],[1,4509,"\n"],[1,4514,"\n"],[1,4532,"\n"],[1,4590,"\n"],[1,4615,"\n"],[1,4618,"\n"],[1,4619,"\n"],[1,4666,"\n"],[1,4675,"\n"],[1,4752,"\n"],[1,4792,"\n"],[1,4845,"\n"],[1,4875,"\n"],[1,4930,"\n"],[1,4976,"\n"],[1,5035,"\n"],[1,5108,"\n"],[1,5173,"\n"],[1,5205,"\n"],[1,5277,"\n"],[1,5334,"\n"],[1,5403,"\n"],[1,5459,"\n"],[1,5505,"\n"],[1,5532,"\n"],[1,5623,"\n"],[1,5628,"\n"]],[4381,5631],[5660,5660]]],[1567428337981,["GJX@GJXAIOU",[[1,293,"\n"],[1,348,"\n"],[1,390,"\n"],[1,430,"\n"],[1,437,"\n"],[1,535,"\n"],[1,562,"\n"],[1,585,"\n"],[1,588,"\n"],[1,612,"\n"]],[225,614],[624,624]]],[1567428347676,["GJX@GJXAIOU",[[1,679,"\n"],[1,736,"\n"],[1,738,"\n"],[1,807,"\n"],[1,877,"\n"],[1,922,"\n"],[1,924,"\n"],[1,975,"\n"],[1,977,"\n"],[1,1050,"\n"],[1,1121,"\n"],[1,1199,"\n"],[1,1272,"\n"],[1,1308,"\n"],[1,1311,"\n"],[1,1345,"\n"],[1,1346,"\n"],[1,1373,"\n"],[1,1400,"\n"],[1,1422,"\n"],[1,1450,"\n"],[1,1451,"\n"],[1,1505,"\n"],[1,1558,"\n"],[1,1605,"\n"],[1,1672,"\n"],[1,1673,"\n"],[1,1676,"\n"],[1,1715,"\n"],[1,1717,"\n"],[1,1741,"\n"],[1,1744,"\n"],[1,1783,"\n"],[1,1784,"\n"],[1,1833,"\n"],[1,1870,"\n"],[1,1873,"\n"],[1,1874,"\n"],[1,1943,"\n"],[1,1987,"\n"],[1,1990,"\n"],[1,1991,"\n"],[1,2063,"\n"],[1,2106,"\n"],[1,2109,"\n"],[1,2110,"\n"],[1,2202,"\n"],[1,2211,"\n"],[1,2297,"\n"],[1,2332,"\n"],[1,2359,"\n"],[1,2435,"\n"],[1,2450,"\n"],[1,2488,"\n"],[1,2499,"\n"],[1,2522,"\n"],[1,2553,"\n"],[1,2608,"\n"],[1,2615,"\n"],[1,2620,"\n"],[1,2623,"\n"],[1,2624,"\n"],[1,2683,"\n"],[1,2725,"\n"],[1,2728,"\n"],[1,2729,"\n"],[1,2808,"\n"],[1,2857,"\n"],[1,2860,"\n"],[1,2861,"\n"],[1,2943,"\n"],[1,2991,"\n"],[1,2994,"\n"],[1,2995,"\n"],[1,3097,"\n"],[1,3106,"\n"],[1,3197,"\n"],[1,3232,"\n"],[1,3259,"\n"],[1,3335,"\n"],[1,3350,"\n"],[1,3388,"\n"],[1,3399,"\n"],[1,3427,"\n"],[1,3458,"\n"],[1,3513,"\n"],[1,3520,"\n"],[1,3525,"\n"],[1,3528,"\n"],[1,3532,"\n"],[1,3588,"\n"],[1,3636,"\n"],[1,3639,"\n"],[1,3640,"\n"]],[676,3641],[3735,3735]]],[1567428377835,["GJX@GJXAIOU",[[-1,738," *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License."]],[738,1321],[738,738]]],[1567428378633,["GJX@GJXAIOU",[[-1,738,"\n"]],[738,738],[737,737]]],[1567428394206,["GJX@GJXAIOU",[[1,3396,"\n"],[1,3405,"\n"],[1,3491,"\n"],[1,3526,"\n"],[1,3553,"\n"],[1,3629,"\n"],[1,3644,"\n"],[1,3682,"\n"],[1,3693,"\n"],[1,3716,"\n"],[1,3747,"\n"],[1,3802,"\n"],[1,3809,"\n"],[1,3814,"\n"]],[3305,3817],[3831,3831]]],[1567428405119,["GJX@GJXAIOU",[[1,3837,"**"],[1,3896,"**"]],[3837,3896],[3837,3900]]],[1567428408272,["GJX@GJXAIOU",[[-1,3839," "]],[3840,3840],[3839,3839]]],[1567428413664,["GJX@GJXAIOU",[[1,5210,"**"],[1,5380,"**"]],[5210,5380],[5210,5384]]]],null,"GJX@GJXAIOU"]]}