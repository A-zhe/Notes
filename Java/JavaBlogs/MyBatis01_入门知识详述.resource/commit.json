{"compress":true,"commitItems":[["58ec8da1-045d-43cd-ae2a-8441695cdf31",1567426422746,"# 从一个简单的示例，我们开始进入Mybatis的世界！\n\n2017年05月05日 15:05:31 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 1200更多\n\n分类专栏： [Mybatis](https://blog.csdn.net/andamajing/article/category/6902012) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71202481](https://blog.csdn.net/andamajing/article/details/71202481) \n\n在这篇文章中，我们通过一个简单的Java示例来说明如何使用Mybatis，不必追究细枝末节的东西，只是看看如何去使用而已。\n\n首选，我假定大家用过maven，因为我这里建立的是Maven项目，因为觉得用Maven引用jar包太方便了（发明这个东西的人太有才了）。\n\n接下来我们需要在pom文件中添加我们需要的jar包，包含以下几个方面：\n\n（1）mysql的驱动；\n\n（2）mybaits的jar包；\n\n（3）单元测试框架类；\n\n（4）日志框架类；\n\n具体pom文件内容如下所示：\n\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\t<modelVersion>4.0.0</modelVersion> \t<groupId>com.majing.learning</groupId>\t<artifactId>mybatis</artifactId>\t<version>0.0.1-SNAPSHOT</version>\t<packaging>jar</packaging> \t<name>mybatis</name>\t<url>http://maven.apache.org</url> \t<properties>\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\t</properties> \t<dependencies>\t\t<!-- 添加mybatis -->\t\t<dependency>\t\t\t<groupId>org.mybatis</groupId>\t\t\t<artifactId>mybatis</artifactId>\t\t\t<version>3.4.1</version>\t\t</dependency> \t\t<!-- 添加mysql驱动 -->\t\t<dependency>\t\t\t<groupId>mysql</groupId>\t\t\t<artifactId>mysql-connector-java</artifactId>\t\t\t<version>5.1.40</version>\t\t</dependency> \t\t<!-- 添加junit -->\t\t<dependency>\t\t\t<groupId>junit</groupId>\t\t\t<artifactId>junit</artifactId>\t\t\t<version>4.9</version>\t\t\t<scope>test</scope>\t\t</dependency> \t\t<!-- 添加log4j -->\t\t<dependency>\t\t\t<groupId>log4j</groupId>\t\t\t<artifactId>log4j</artifactId>\t\t\t<version>1.2.16</version>\t\t</dependency>\t</dependencies> \t<build>\t\t<plugins>\t\t\t<plugin>\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\t\t\t\t<version>3.0</version>\t\t\t\t<configuration>\t\t\t\t\t<source>1.7</source>\t\t\t\t\t<target>1.7</target>\t\t\t\t\t<encoding>UTF-8</encoding>\t\t\t\t</configuration>\t\t\t</plugin>\t\t</plugins>\t</build></project>\n```\n\n 引入pom文件后，经过install我们就能看到我们得到了我们想要的各种jar包了。\n\n![](https://img-blog.csdn.net/20170505144109701?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n一切准备就绪，接下来我们开始来真正的写业务部分了。对于mybatis来说，有一个很重要的配置文件，那就是configuration.xml，这个文件是我们使用mybatis的核心，后面也将围绕着这个配置文件来说明mybatis的各种功能。\n\n我们先来看下这个配置文件configuration.xml：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE configuration  \tPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"  \t\"http://mybatis.org/dtd/mybatis-3-config.dtd\"><configuration> \t<settings>\t\t<setting name=\"logImpl\" value=\"LOG4J\" />\t</settings> \t<!-- 和spring整合后 environments配置将废除 -->\t<environments default=\"development\">\t\t<environment id=\"development\">\t\t\t<!-- 使用jdbc事务管理 -->\t\t\t<transactionManager type=\"JDBC\" />\t\t\t<!-- 数据库连接池 -->\t\t\t<dataSource type=\"POOLED\">\t\t\t\t<property name=\"driver\" value=\"com.mysql.jdbc.Driver\" />\t\t\t\t<property name=\"url\"\t\t\t\t\tvalue=\"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8\" />\t\t\t\t<property name=\"username\" value=\"root\" />\t\t\t\t<property name=\"password\" value=\"root\" />\t\t\t</dataSource>\t\t</environment>\t</environments> \t<mappers>\t\t<mapper resource=\"com\\majing\\learning\\mybatis\\dao\\UserDaoMapper.xml\" />\t</mappers> </configuration>\n```\n\n 我们先不管配置文件中的细节配置，从配置上我们可以直观的看出我们对日志、数据库连接地址和驱动都做了相关的配置。和日志相关的还需要有一个配置文件，用于控制日志往什么地方刷，这个配置文件就是log4j.properties，具体配置格式如下：\n\n```\nlog4j.rootLogger=DEBUG,mybatis,stdout  log4j.appender.mybatis=org.apache.log4j.DailyRollingFileAppenderlog4j.appender.mybatis.layout=org.apache.log4j.PatternLayoutlog4j.appender.mybatis.DatePattern='.'yyyy-MM-dd-HHlog4j.appender.mybatis.layout.ConversionPattern=%m%nlog4j.appender.mybatis.file=D:/data/logs/mybatis/mybatis.loglog4j.appender.mybatis.encoding=UTF-8 log4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%c] %m%n \n```\n\n 至此，该有的配置文件我们都已经准备好了。\n\n接下来开始写业务代码。这篇文章是一个示例，所以我们就按照最简单的来。我们模拟从数据库里读取一个用户。\n\n我们先来看下数据库中的数据：\n\n![](https://img-blog.csdn.net/20170505144907667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n我们根据这个数据库表结构，来创建一个相应的POJO实体类User，如下所示:\n\n```\npackage com.majing.learning.mybatis.entity; public class User {\tprivate int id;\tprivate String name;\tprivate String password;\tprivate int age;\tprivate int deleteFlag;\tpublic int getId() {\t\treturn id;\t}\tpublic void setId(int id) {\t\tthis.id = id;\t}\tpublic String getName() {\t\treturn name;\t}\tpublic void setName(String name) {\t\tthis.name = name;\t}\tpublic String getPassword() {\t\treturn password;\t}\tpublic void setPassword(String password) {\t\tthis.password = password;\t}\tpublic int getAge() {\t\treturn age;\t}\tpublic void setAge(int age) {\t\tthis.age = age;\t}\tpublic int getDeleteFlag() {\t\treturn deleteFlag;\t}\tpublic void setDeleteFlag(int deleteFlag) {\t\tthis.deleteFlag = deleteFlag;\t}\t@Override\tpublic String toString() {\t\treturn \"User [id=\" + id + \", name=\" + name + \", password=\" + password + \", age=\" + age + \", deleteFlag=\" + deleteFlag + \"]\";\t}\t\t}\n```\n\n 接着，我们创建一个接口类，这个接口类定义我们对数据库表的操作行为，如下所示，我们定义一个查询方法：\n\n```\npackage com.majing.learning.mybatis.dao; import com.majing.learning.mybatis.entity.User; public interface UserDao {\tpublic User findUserById (int userId);}\n```\n\n 有了这些够了吗？NO!\n\n我们还缺少一个很重要的东西，想想就知道，其实我们并没有告诉mybatis该怎么去查询，也就是这个方法对应什么样的执行语句，我们还需要mapper文件！！！\n\n我们在UserDao接口所在文件目录创建一个UserDaoMapper.xml的配置文件，配置如下：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>   <!DOCTYPE mapper   PUBLIC \"-//ibatis.apache.org//DTD Mapper 3.0//EN\"  \"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd\"><mapper namespace=\"com.majing.learning.mybatis.dao.UserDao\"> \t<select id=\"findUserById\" resultType=\"com.majing.learning.mybatis.entity.User\">\t\tselect * from user where id = #{id}\t</select> </mapper>\n```\n\n 配置文件中通过id指定了方法和sql语句的对应关系，并且将返回结果指定为User实体。\n\n至此，一个简单的示例所需要的东西都出来了，我们写个简单的测试类来看下怎么查询。\n\n```\npackage com.majing.learning.mybatis; import java.io.IOException; import junit.framework.Assert; import org.apache.ibatis.io.Resources;import org.apache.ibatis.session.SqlSession;import org.apache.ibatis.session.SqlSessionFactory;import org.apache.ibatis.session.SqlSessionFactoryBuilder;import org.junit.Test; import com.majing.learning.mybatis.dao.UserDao;import com.majing.learning.mybatis.entity.User; public class UserDaoTest {\t\t@Test\tpublic void findUserById(){\t\tSqlSession sqlSession = getSessionFactory().openSession();  \t\tUserDao userMapper = sqlSession.getMapper(UserDao.class);  \t\tUser user = userMapper.findUserById(1);  \t\tSystem.out.println(user);\t\tAssert.assertNotNull(\"没找到数据\", user);\t} \t// Mybatis 通过SqlSessionFactory获取SqlSession, 然后才能通过SqlSession与数据库进行交互\tprivate static SqlSessionFactory getSessionFactory() {\t\tSqlSessionFactory sessionFactory = null;\t\tString resource = \"configuration.xml\";\t\ttry {\t\t\tsessionFactory = new SqlSessionFactoryBuilder().build(Resources.getResourceAsReader(resource));\t\t} catch (IOException e) {\t\t\te.printStackTrace();\t\t}\t\treturn sessionFactory;\t}}\n```\n\n 从测试用例代码中，我们看到我们查询一个用户其实只用到了三条语句，也就是下面：\n\n```\nSqlSession sqlSession = getSessionFactory().openSession();  \t\tUserDao userMapper = sqlSession.getMapper(UserDao.class);  \t\tUser user = userMapper.findUserById(1);  \n```\n\n 是不是比之前繁琐的Java代码好多了，反正我这么觉得。至此，一个入门的简单说明到此为止，后面我们陆续学习Mybatis的一些常用功能。接下来一篇文章会简单说明下mybatis如何实现增删改查基本功能。",[[1567426414126,["GJX@GJXAIOU",[[-1,30,"2017年05月05日 15:05:31 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 1200更多\n\n分类专栏： [Mybatis](https://blog.csdn.net/andamajing/article/category/6902012) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。"]],[30,417],[30,30]]],[1567426429220,["GJX@GJXAIOU",[[1,30,"[原文链接](https://blog.csdn.net/andamajing/article/details/71202481)"]],[30,30],[95,95]]],[1567426432322,["GJX@GJXAIOU",[[-1,97,"本文链接：[https://blog.csdn.net/andamajing/article/details/71202481](https://blog.csdn.net/andamajing/article/details/71202481) "]],[97,221],[97,97]]],[1567426432767,["GJX@GJXAIOU",[[-1,98,"\n"]],[97,97],[96,96]]],[1567426451089,["GJX@GJXAIOU",[[1,448,"\n"],[1,548,"\n"],[1,583,"\n"],[1,584,"\n"],[1,623,"\n"],[1,656,"\n"],[1,690,"\n"],[1,717,"\n"],[1,718,"\n"],[1,739,"\n"],[1,774,"\n"],[1,775,"\n"],[1,788,"\n"],[1,856,"\n"],[1,870,"\n"],[1,871,"\n"],[1,886,"\n"],[1,906,"\n"],[1,920,"\n"],[1,953,"\n"],[1,988,"\n"],[1,1015,"\n"],[1,1030,"\n"],[1,1031,"\n"],[1,1051,"\n"],[1,1065,"\n"],[1,1092,"\n"],[1,1140,"\n"],[1,1168,"\n"],[1,1183,"\n"],[1,1184,"\n"],[1,1202,"\n"],[1,1216,"\n"],[1,1243,"\n"],[1,1276,"\n"],[1,1301,"\n"],[1,1323,"\n"],[1,1338,"\n"],[1,1339,"\n"],[1,1357,"\n"],[1,1371,"\n"],[1,1398,"\n"],[1,1431,"\n"],[1,1459,"\n"],[1,1474,"\n"],[1,1490,"\n"],[1,1491,"\n"],[1,1499,"\n"],[1,1510,"\n"],[1,1521,"\n"],[1,1568,"\n"],[1,1618,"\n"],[1,1644,"\n"],[1,1663,"\n"],[1,1688,"\n"],[1,1713,"\n"],[1,1744,"\n"],[1,1764,"\n"],[1,1776,"\n"],[1,1788,"\n"],[1,1797,"\n"]],[344,1807],[1868,1868]]],[1567426456866,["GJX@GJXAIOU",[[-1,281,"\n"]],[281,281],[280,280]]],[1567426457504,["GJX@GJXAIOU",[[-1,298,"\n"]],[298,298],[297,297]]],[1567426458143,["GJX@GJXAIOU",[[-1,310,"\n"]],[310,310],[309,309]]],[1567426473353,["GJX@GJXAIOU",[[1,236,"**"],[1,256,"**"]],[236,256],[236,260]]],[1567426494870,["GJX@GJXAIOU",[[1,2129,"**"],[1,2173,"**"]],[2129,2173],[2129,2177]]],[1567426505027,["GJX@GJXAIOU",[[1,2303,"\n"],[1,2328,"\n"],[1,2374,"\n"],[1,2421,"\n"],[1,2436,"\n"],[1,2437,"\n"],[1,2448,"\n"],[1,2490,"\n"],[1,2502,"\n"],[1,2503,"\n"],[1,2541,"\n"],[1,2578,"\n"],[1,2610,"\n"],[1,2632,"\n"],[1,2669,"\n"],[1,2687,"\n"],[1,2716,"\n"],[1,2776,"\n"],[1,2800,"\n"],[1,2875,"\n"],[1,2920,"\n"],[1,2965,"\n"],[1,2981,"\n"],[1,2997,"\n"],[1,3013,"\n"],[1,3014,"\n"],[1,3024,"\n"],[1,3097,"\n"],[1,3108,"\n"],[1,3109,"\n"]],[2265,3125],[3155,3155]]],[1567426509384,["GJX@GJXAIOU",[[-1,2260,"\n"]],[2260,2260],[2259,2259]]],[1567426524174,["GJX@GJXAIOU",[[1,3192,"**"],[1,3214,"**"]],[3192,3214],[3192,3218]]],[1567426526527,["GJX@GJXAIOU",[[1,3257,"·"]],[3257,3257],[3258,3258]]],[1567426527687,["GJX@GJXAIOU",[[-1,3257,"·"]],[3258,3258],[3257,3257]]],[1567426528104,["GJX@GJXAIOU",[[1,3257,"`"]],[3257,3257],[3258,3258]]],[1567426529463,["GJX@GJXAIOU",[[1,3274,"`"]],[3274,3274],[3275,3275]]],[1567426540493,["GJX@GJXAIOU",[[1,3329,"\n"],[1,3330,"\n"],[1,3394,"\n"],[1,3454,"\n"],[1,3505,"\n"],[1,3557,"\n"],[1,3617,"\n"],[1,3654,"\n"],[1,3655,"\n"],[1,3709,"\n"],[1,3768,"\n"]],[3291,3852],[3863,3863]]],[1567426563899,["GJX@GJXAIOU",[[1,3290,"\\"]],[3290,3290],[3291,3291]]],[1567426564558,["GJX@GJXAIOU",[[-1,3290,"\\"]],[3291,3291],[3290,3290]]],[1567426565262,["GJX@GJXAIOU",[[1,3291,"\n"]],[3290,3290],[3291,3291]]],[1567426572612,["GJX@GJXAIOU",[[1,3291,"// 首先职友集"]],[3291,3291],[3299,3299]]],[1567426573929,["GJX@GJXAIOU",[[-1,3296,"职友集"]],[3299,3299],[3296,3296]]],[1567426574561,["GJX@GJXAIOU",[[1,3296,"zhi"]],[3296,3296],[3299,3299]]],[1567426575343,["GJX@GJXAIOU",[[-1,3296,"zhi"]],[3299,3299],[3296,3296]]],[1567426582136,["GJX@GJXAIOU",[[1,3296,"只有Debug信息会舒小虎"]],[3296,3296],[3309,3309]]],[1567426582962,["GJX@GJXAIOU",[[-1,3305,"会舒小虎"]],[3309,3309],[3305,3305]]],[1567426593791,["GJX@GJXAIOU",[[1,3305,"会输出，然后输出位置分别为 ma"]],[3305,3305],[3321,3321]]],[1567426594585,["GJX@GJXAIOU",[[-1,3320,"a"]],[3321,3321],[3320,3320]]],[1567426598432,["GJX@GJXAIOU",[[1,3320,"ybatis 和 "]],[3320,3320],[3329,3329]]],[1567426604279,["GJX@GJXAIOU",[[1,3329,"stdout "]],[3329,3329],[3336,3336]]],[1567426877815,["GJX@GJXAIOU",[[-1,3335," "]],[3336,3336],[3335,3335]]],[1567426878625,["GJX@GJXAIOU",[[1,3335,"()"]],[3335,3335],[3337,3337]]],[1567426880979,["GJX@GJXAIOU",[[1,3336,"kongzhi"]],[3336,3336],[3343,3343]]],[1567426883510,["GJX@GJXAIOU",[[-1,3336,"kongzhi"]],[3343,3343],[3336,3336]]],[1567426887184,["GJX@GJXAIOU",[[1,3336,"控制台输出"]],[3336,3336],[3341,3341]]],[1567426911031,["GJX@GJXAIOU",[[1,4012,"\n"]],[4011,4011],[4012,4012]]],[1567426911478,["GJX@GJXAIOU",[[1,4013,"\n"]],[4012,4012],[4013,4013]]],[1567426915577,["GJX@GJXAIOU",[[1,4005,"（）"]],[4005,4005],[4007,4007]]],[1567426923192,["GJX@GJXAIOU",[[1,4006,"表名为： uder"]],[4006,4006],[4015,4015]]],[1567426924063,["GJX@GJXAIOU",[[-1,4012,"der"]],[4015,4015],[4012,4012]]],[1567426924512,["GJX@GJXAIOU",[[1,4012,"ser"]],[4012,4012],[4015,4015]]],[1567426935017,["GJX@GJXAIOU",[[1,4022," id | name | passwoer"]],[4022,4022],[4043,4043]]],[1567426935538,["GJX@GJXAIOU",[[-1,4041,"er"]],[4043,4043],[4041,4041]]],[1567426935665,["GJX@GJXAIOU",[[1,4041,"f"]],[4041,4041],[4042,4042]]],[1567426936480,["GJX@GJXAIOU",[[-1,4041,"f"]],[4042,4042],[4041,4041]]],[1567426937888,["GJX@GJXAIOU",[[1,4041,"rd |"]],[4041,4041],[4045,4045]]],[1567426937922,["GJX@GJXAIOU",[[1,4048,"\n"]],[4045,4045],[4046,4046]]],[1567426938144,["GJX@GJXAIOU",[[1,4046," "]],[4046,4046],[4047,4047]]],[1567426938601,["GJX@GJXAIOU",[[-1,4046," "]],[4047,4047],[4046,4046]]],[1567426939054,["GJX@GJXAIOU",[[-1,4048,"\n"]],[4046,4046],[4045,4045]]],[1567426943753,["GJX@GJXAIOU",[[1,4045," age delete"]],[4045,4045],[4056,4056]]],[1567426945649,["GJX@GJXAIOU",[[-1,4050,"delete"]],[4056,4056],[4050,4050]]],[1567426947136,["GJX@GJXAIOU",[[1,4050,"|d"]],[4050,4050],[4052,4052]]],[1567426947671,["GJX@GJXAIOU",[[-1,4051,"d"]],[4052,4052],[4051,4051]]],[1567426951792,["GJX@GJXAIOU",[[1,4051," deleteGlag"]],[4051,4051],[4062,4062]]],[1567426952983,["GJX@GJXAIOU",[[-1,4058,"Glag"]],[4062,4062],[4058,4058]]],[1567426954497,["GJX@GJXAIOU",[[1,4058,"Flag"]],[4058,4058],[4062,4062]]],[1567426955446,["GJX@GJXAIOU",[[1,4063," \n"]],[4062,4062],[4064,4064]]],[1567426961433,["GJX@GJXAIOU",[[1,4064,"---|---|---|--|"]],[4064,4064],[4079,4079]]],[1567426963195,["GJX@GJXAIOU",[[1,4078,"-"]],[4078,4078],[4079,4079]]],[1567426968258,["GJX@GJXAIOU",[[1,4080,"---|"]],[4080,4080],[4084,4084]]],[1567426970278,["GJX@GJXAIOU",[[1,4085,"    |   |   |   |   |\n"]],[4084,4084],[4085,4089]]],[1567426974434,["GJX@GJXAIOU",[[-1,4085,"    "],[1,4089,"1"]],[4085,4089],[4086,4086]]],[1567426976308,["GJX@GJXAIOU",[[1,4086," "]],[4086,4086],[4087,4087]]],[1567426981291,["GJX@GJXAIOU",[[-1,4088,"   "],[1,4091,"z"]],[4088,4091],[4089,4089]]],[1567426982199,["GJX@GJXAIOU",[[1,4089,"hangsan"]],[4089,4089],[4096,4096]]],[1567426991603,["GJX@GJXAIOU",[[1,4097,"admin"]],[4097,4097],[4102,4102]]],[1567426994641,["GJX@GJXAIOU",[[-1,4106,"   "],[1,4109,"1"]],[4106,4109],[4107,4107]]],[1567426994839,["GJX@GJXAIOU",[[1,4107,"1"]],[4107,4107],[4108,4108]]],[1567426998389,["GJX@GJXAIOU",[[-1,4109,"   "],[1,4112,"0"]],[4109,4112],[4110,4110]]],[1567427003960,["GJX@GJXAIOU",[[-1,4114,"![](https://img-blog.csdn.net/20170505144907667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n"]],[4113,4296],[4113,4113]]],[1567427004144,["GJX@GJXAIOU",[[-1,4114,"\n"]],[4113,4113],[4112,4112]]],[1567427004606,["GJX@GJXAIOU",[[-1,4113,"\n"]],[4112,4112],[4111,4111]]],[1567427020557,["GJX@GJXAIOU",[[1,4200,"\n"],[1,4201,"\n"],[1,4220,"\n"],[1,4236,"\n"],[1,4257,"\n"],[1,4282,"\n"],[1,4299,"\n"],[1,4323,"\n"],[1,4344,"\n"],[1,4356,"\n"],[1,4358,"\n"],[1,4386,"\n"],[1,4401,"\n"],[1,4403,"\n"],[1,4429,"\n"],[1,4443,"\n"],[1,4445,"\n"],[1,4480,"\n"],[1,4499,"\n"],[1,4501,"\n"],[1,4531,"\n"],[1,4549,"\n"],[1,4551,"\n"],[1,4594,"\n"],[1,4621,"\n"],[1,4623,"\n"],[1,4645,"\n"],[1,4658,"\n"],[1,4660,"\n"],[1,4690,"\n"],[1,4707,"\n"],[1,4709,"\n"],[1,4738,"\n"],[1,4758,"\n"],[1,4760,"\n"],[1,4804,"\n"],[1,4835,"\n"],[1,4837,"\n"],[1,4847,"\n"],[1,4874,"\n"],[1,5000,"\n"],[1,5002,"\n"],[1,5003,"\n"],[1,5004,"\n"]],[4157,5005],[5049,5049]]],[1567427047279,["GJX@GJXAIOU",[[-1,4332,"public int getId() {\n\t\treturn id;\n\t}\n\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\tpublic int getDeleteFlag() {\n\t\treturn deleteFlag;\n\t}\n\tpublic void setDeleteFlag(int deleteFlag) {\n\t\tthis.deleteFlag = deleteFlag;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"User [id=\" + id + \", name=\" + name + \", password=\" + password + \", age=\" + age + \", deleteFlag=\" + deleteFlag + \"]\";\n\t}"]],[4332,5043],[4332,4332]]],[1567427050065,["GJX@GJXAIOU",[[1,4332,"// shen"]],[4332,4332],[4339,4339]]],[1567427051247,["GJX@GJXAIOU",[[-1,4335,"shen"]],[4339,4339],[4335,4335]]],[1567427059871,["GJX@GJXAIOU",[[1,4335,"省略以上所有的 get/ge"]],[4335,4335],[4349,4349]]],[1567427060487,["GJX@GJXAIOU",[[-1,4347,"ge"]],[4349,4349],[4347,4347]]],[1567427061104,["GJX@GJXAIOU",[[1,4347,"er"]],[4347,4347],[4349,4349]]],[1567427061758,["GJX@GJXAIOU",[[-1,4347,"er"]],[4349,4349],[4347,4347]]],[1567427064754,["GJX@GJXAIOU",[[1,4347,"set 方法"]],[4347,4347],[4353,4353]]],[1567427066800,["GJX@GJXAIOU",[[-1,4356,"\t"]],[4357,4357],[4356,4356]]],[1567427067198,["GJX@GJXAIOU",[[-1,4356,"\n"]],[4356,4356],[4355,4355]]],[1567427067570,["GJX@GJXAIOU",[[-1,4354,"\t"]],[4355,4355],[4354,4354]]],[1567427067920,["GJX@GJXAIOU",[[-1,4354,"\n"]],[4354,4354],[4353,4353]]],[1567427082055,["GJX@GJXAIOU",[[1,4457,"\n"],[1,4458,"\n"],[1,4505,"\n"],[1,4506,"\n"],[1,4532,"\n"],[1,4571,"\n"]],[4417,4572],[4578,4578]]],[1567427097522,["GJX@GJXAIOU",[[1,4375,"**"],[1,4394,"**"]],[4375,4394],[4375,4398]]],[1567427103681,["GJX@GJXAIOU",[[-1,4462," "]],[4463,4463],[4462,4462]]],[1567427104982,["GJX@GJXAIOU",[[-1,4462,"\n"]],[4462,4462],[4461,4461]]],[1567427111407,["GJX@GJXAIOU",[[-1,4540,"public "]],[4547,4547],[4540,4540]]],[1567427128182,["GJX@GJXAIOU",[[1,4618,"**"],[1,4667,"**"]],[4618,4667],[4618,4671]]],[1567427149947,["GJX@GJXAIOU",[[1,4774,"\n"],[1,4793,"\n"],[1,4844,"\n"],[1,4895,"\n"],[1,4955,"\n"],[1,4956,"\n"],[1,5036,"\n"],[1,5073,"\n"],[1,5083,"\n"],[1,5084,"\n"]],[4732,5093],[5103,5103]]],[1567427187456,["GJX@GJXAIOU",[[1,5110,"**"],[1,5152,"**"]],[5110,5152],[5110,5156]]],[1567427205590,["GJX@GJXAIOU",[[1,5240,"\n"],[1,5241,"\n"],[1,5268,"\n"],[1,5269,"\n"],[1,5299,"\n"],[1,5300,"\n"],[1,5338,"\n"],[1,5382,"\n"],[1,5433,"\n"],[1,5491,"\n"],[1,5513,"\n"],[1,5514,"\n"],[1,5561,"\n"],[1,5608,"\n"],[1,5609,"\n"],[1,5635,"\n"],[1,5636,"\n"],[1,5642,"\n"],[1,5670,"\n"],[1,5732,"\n"],[1,5793,"\n"],[1,5836,"\n"],[1,5863,"\n"],[1,5901,"\n"],[1,5903,"\n"],[1,5904,"\n"],[1,5973,"\n"],[1,6028,"\n"],[1,6070,"\n"],[1,6110,"\n"],[1,6117,"\n"],[1,6215,"\n"],[1,6242,"\n"],[1,6265,"\n"],[1,6268,"\n"],[1,6292,"\n"],[1,6294,"\n"]],[5204,6295],[6332,6332]]],[1567427212903,["GJX@GJXAIOU",[[-1,5241," \nimport java.io.IOException;\n \nimport junit.framework.Assert;\n \nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.junit.Test;\n \nimport com.majing.learning.mybatis.dao.UserDao;\nimport com.majing.learning.mybatis.entity.User;"]],[5241,5621],[5241,5241]]],[1567427214888,["GJX@GJXAIOU",[[1,5241,"、、"]],[5241,5241],[5243,5243]]],[1567427215559,["GJX@GJXAIOU",[[-1,5241,"、、"]],[5243,5243],[5241,5241]]],[1567427222578,["GJX@GJXAIOU",[[1,5241,"// 省略各种导包"]],[5241,5241],[5250,5250]]],[1567427532964,["GJX@GJXAIOU",[[1,6135,"\n"]],[6135,6135],[6136,6136]]],[1567427535275,["GJX@GJXAIOU",[[1,6072,"\n"]],[6072,6072],[6073,6073]]],[1567427538352,["GJX@GJXAIOU",[[-1,6073,"\t\t"]],[6075,6075],[6073,6073]]],[1567427538544,["GJX@GJXAIOU",[[-1,6072,"\n"]],[6073,6073],[6072,6072]]],[1567427539705,["GJX@GJXAIOU",[[1,6072,"\n"]],[6072,6072],[6073,6073]]]],null,"GJX@GJXAIOU"]]}