{"compress":true,"commitItems":[["a044913d-0703-4696-985d-fd1c4f628183",1567431475593,"# Mybatis配置之配置元素详述\n\n2017年05月11日 14:09:24 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 6727更多\n\n分类专栏： [Mybatis](https://blog.csdn.net/andamajing/article/category/6902012) [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71616712](https://blog.csdn.net/andamajing/article/details/71616712) \n\n在这篇文章中，我们接着前文继续往下看其他的配置元素，今天的主角就是我们的<environments>元素，该元素用于对我们需要访问的数据库配置进行设置，我们先来看一下配置：\n\n```\n<environments default=\"development\">\t\t<environment id=\"development\">\t\t\t<!-- 使用jdbc事务管理 -->\t\t\t<transactionManager type=\"JDBC\" />\t\t\t<!-- 数据库连接池 -->\t\t\t<dataSource type=\"POOLED\">\t\t\t\t<property name=\"driver\" value=\"${driver}\" />\t\t\t\t<property name=\"url\" value=\"${url}\" />\t\t\t\t<property name=\"username\" value=\"${username}\" />\t\t\t\t<property name=\"password\" value=\"${password}\" />\t\t\t</dataSource>\t\t</environment></environments>\n```\n\n 从上面看，我们知道<environments>下面可以配置多个<environment>元素节点，而每个<environment>节点我们可以配置两个东西，一个是事务管理器配置<transactionManager>，另一个是数据源配置<dataSource>。\n\n我们先从源码开始看起，看看这块是怎么解析的，然后再具体看里面都要配置什么哪些参数。\n\n还是从解析的入口开始看起：\n\n![](https://img-blog.csdn.net/20170511123828382?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n进入方法内部：\n\n![](https://img-blog.csdn.net/20170511124034429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n从代码看，就是首先获取<environments>标签元素的default属性，这个属性作用就是指定当前情况下使用哪个数据库配置，也就是使用哪个<environment>节点的配置，default的值就是配置的<environment>标签元素的id值。\n\n正如上面代码中isSpecifiedEnvironment(id)方法一样，在遍历所有<environment>的时候一次判断相应的id是否是default设置的值，如果是，则使用当前<environment>元素进行数据库连接的初始化。\n\nisSpecifiedEnvironment方法如下所示：\n\n![](https://img-blog.csdn.net/20170511124525058?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbWFqaW5nZ29nb2dv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n紧接着，下面的代码就是用设置的事务管理器和数据源构造相应的对象了。\n\n```\nTransactionFactory txFactory = transactionManagerElement(child.evalNode(\"transactionManager\"));DataSourceFactory dsFactory = dataSourceElement(child.evalNode(\"dataSource\"));DataSource dataSource = dsFactory.getDataSource();Environment.Builder environmentBuilder = new Environment.Builder(id)              .transactionFactory(txFactory)              .dataSource(dataSource);configuration.setEnvironment(environmentBuilder.build());\n```\n\n 我们首先从事务管理器的解析开始，进入到transactionManagerElement()方法内：\n\n```\nprivate TransactionFactory transactionManagerElement(XNode context) throws Exception {    if (context != null) {      String type = context.getStringAttribute(\"type\");      Properties props = context.getChildrenAsProperties();      TransactionFactory factory = (TransactionFactory) resolveClass(type).newInstance();      factory.setProperties(props);      return factory;    }    throw new BuilderException(\"Environment declaration requires a TransactionFactory.\");  }\n```\n\n 我们可以看到，这里其实是根据<transactionManager>这个元素的type属性来找相应的事务管理器的。\n\n在Mybatis里面支持两种配置：JDBC和MANAGED。这里根据type的设置值来返回相应的事务管理器。我们看下，在Mybatis的Configuration类中，已经将这两种配置及对应的事务管理器做了某种关联，如下所示：\n\n```\npublic Configuration() {    typeAliasRegistry.registerAlias(\"JDBC\", JdbcTransactionFactory.class);    typeAliasRegistry.registerAlias(\"MANAGED\", ManagedTransactionFactory.class);     typeAliasRegistry.registerAlias(\"JNDI\", JndiDataSourceFactory.class);    typeAliasRegistry.registerAlias(\"POOLED\", PooledDataSourceFactory.class);    typeAliasRegistry.registerAlias(\"UNPOOLED\", UnpooledDataSourceFactory.class);     typeAliasRegistry.registerAlias(\"PERPETUAL\", PerpetualCache.class);    typeAliasRegistry.registerAlias(\"FIFO\", FifoCache.class);    typeAliasRegistry.registerAlias(\"LRU\", LruCache.class);    typeAliasRegistry.registerAlias(\"SOFT\", SoftCache.class);    typeAliasRegistry.registerAlias(\"WEAK\", WeakCache.class);     typeAliasRegistry.registerAlias(\"DB_VENDOR\", VendorDatabaseIdProvider.class);     typeAliasRegistry.registerAlias(\"XML\", XMLLanguageDriver.class);    typeAliasRegistry.registerAlias(\"RAW\", RawLanguageDriver.class);     typeAliasRegistry.registerAlias(\"SLF4J\", Slf4jImpl.class);    typeAliasRegistry.registerAlias(\"COMMONS_LOGGING\", JakartaCommonsLoggingImpl.class);    typeAliasRegistry.registerAlias(\"LOG4J\", Log4jImpl.class);    typeAliasRegistry.registerAlias(\"LOG4J2\", Log4j2Impl.class);    typeAliasRegistry.registerAlias(\"JDK_LOGGING\", Jdk14LoggingImpl.class);    typeAliasRegistry.registerAlias(\"STDOUT_LOGGING\", StdOutImpl.class);    typeAliasRegistry.registerAlias(\"NO_LOGGING\", NoLoggingImpl.class);     typeAliasRegistry.registerAlias(\"CGLIB\", CglibProxyFactory.class);    typeAliasRegistry.registerAlias(\"JAVASSIST\", JavassistProxyFactory.class);     languageRegistry.setDefaultDriverClass(XMLLanguageDriver.class);    languageRegistry.register(RawLanguageDriver.class);  }\n```\n\n 这两种事务管理器的区别：\n\nJDBC：这个配置就是直接使用了 JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。\n\nMANAGED：这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将 closeConnection 属性设置为 false 来阻止它默认的关闭行为。例如:\n\n```\n<transactionManager type=\"MANAGED\">  <property name=\"closeConnection\" value=\"false\"/></transactionManager>\n```\n\n 备注：如果你正在使用 Spring + MyBatis，则没有必要配置事务管理器， 因为 Spring 模块会使用自带的管理器来覆盖前面的配置。\n\n说完了事务管理器，紧接着，我们来看看数据源配置。\n\ndataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。Mybatis支持三种内建的数据源类型，分别是UNPOOLED、POOLED和JNDI，即我们在配置<dataSource>元素的type属性时，我们可以直接支持设置这三个值。\n\n下面分别对这三种类型做一个简单的说明：\n\n（1）UNPOOLED\n\n这个数据源的实现只是每次被请求时打开和关闭连接。虽然一点慢，它对在及时可用连接方面没有性能要求的简单应用程序是一个很好的选择。 不同的数据库在这方面表现也是不一样的，所以对某些数据库来说使用连接池并不重要，这个配置也是理想的。\n\nUNPOOLED 类型的数据源仅仅需要配置以下 5 种属性：\n\ndriver ： 这是 JDBC 驱动的 Java 类的完全限定名（并不是JDBC驱动中可能包含的数据源类）。\n\nurl ：这是数据库的 JDBC URL 地址。\n\nusername ： 登录数据库的用户名。\n\npassword ：登录数据库的密码。\n\ndefaultTransactionIsolationLevel ： 默认的连接事务隔离级别。 \n\n作为可选项，你也可以传递属性给数据库驱动。要这样做，属性的前缀为“driver.”，例如：\n\ndriver.encoding=UTF8\n\n这将通过DriverManager.getConnection(url,driverProperties)方法传递值为 UTF8 的 encoding 属性给数据库驱动。\n\n（2）POOLED  \n\n这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来，避免了创建新的连接实例时所必需的初始化和认证时间。 这是一种使得并发 Web 应用快速响应请求的流行处理方式。\n\n除了上述提到 UNPOOLED 下的属性外，会有更多属性用来配置 POOLED 的数据源： \n\npoolMaximumActiveConnections ： 在任意时间可以存在的活动（也就是正在使用）连接数量，默认值：10 \n\npoolMaximumIdleConnections ：任意时间可能存在的空闲连接数。 \n\npoolMaximumCheckoutTime ：在被强制返回之前，池中连接被检出（checked out）时间，默认值：20000 毫秒（即 20 秒） \n\npoolTimeToWait ：这是一个底层设置，如果获取连接花费的相当长的时间，它会给连接池打印状态日志并重新尝试获取一个连接（避免在误配置的情况下一直安静的失败），默认值：20000 毫秒（即 20 秒）。 \n\npoolPingQuery ： 发送到数据库的侦测查询，用来检验连接是否处在正常工作秩序中并准备接受请求。默认是“NO PING QUERY SET”，这会导致多数数据库驱动失败时带有一个恰当的错误消息。 \n\npoolPingEnabled ： 是否启用侦测查询。若开启，也必须使用一个可执行的 SQL 语句设置 poolPingQuery 属性（最好是一个非常快的 SQL），默认值：false。poolPingConnectionsNotUsedFor ： 配置 poolPingQuery 的使用频度。这可以被设置成匹配具体的数据库连接超时时间，来避免不必要的侦测，默认值：0（即所有连接每一时刻都被侦测 — 当然仅当 poolPingEnabled 为 true 时适用）。 \n\n（3）JNDI\n\n这个数据源的实现是为了能在如 EJB 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。这种数据源配置只需要两个属性：\n\ninitial_context ： 这个属性用来在 InitialContext 中寻找上下文（即，initialContext.lookup(initial_context)）。这是个可选属性，如果忽略，那么 data_source 属性将会直接从 InitialContext 中寻找。\n\ndata_source ： 这是引用数据源实例位置的上下文的路径。提供了 initial_context 配置时会在其返回的上下文中进行查找，没有提供时则直接在 InitialContext 中查找。\n\n和其他数据源配置类似，可以通过添加前缀“env.”直接把属性传递给初始上下文。比如：\n\nenv.encoding=UTF8\n\n这就会在初始上下文（InitialContext）实例化时往它的构造方法传递值为 UTF8 的 encoding 属性。\n\n至此，关于<environments>元素的相关配置使用便介绍完毕了。",[[1567431473634,["GJX@GJXAIOU",[[-1,20,"2017年05月11日 14:09:24 [DreamMakers](https://me.csdn.net/andamajing) 阅读数 6727更多\n\n分类专栏： [Mybatis](https://blog.csdn.net/andamajing/article/category/6902012) [Mybatis应用及原理探析](https://blog.csdn.net/andamajing/article/category/6902014) [深入了解Mybatis使用及实现原理](https://blog.csdn.net/andamajing/article/category/9268791)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/andamajing/article/details/71616712](https://blog.csdn.net/andamajing/article/details/71616712) "]],[20,609],[20,20]]],[1567431482378,["GJX@GJXAIOU",[[1,20,"[原文链接](https://blog.csdn.net/andamajing/article/details/71616712)"]],[20,20],[85,85]]],[1567431554070,["GJX@GJXAIOU",[[1,215,"\n"],[1,247,"\n"],[1,269,"\n"],[1,306,"\n"],[1,324,"\n"],[1,353,"\n"],[1,401,"\n"],[1,443,"\n"],[1,495,"\n"],[1,547,"\n"],[1,563,"\n"],[1,579,"\n"]],[179,594],[606,606]]],[1567431568514,["GJX@GJXAIOU",[[1,123,"**"],[1,162,"**"]],[123,162],[123,166]]],[1567431609698,["GJX@GJXAIOU",[[1,667,"**"],[1,747,"**"]],[667,747],[667,751]]],[1567431688467,["GJX@GJXAIOU",[[1,1196,"**"],[1,1315,"**"]],[1196,1315],[1196,1319]]],[1567431722227,["GJX@GJXAIOU",[[1,1792,"\n"],[1,1870,"\n"],[1,1920,"\n"],[1,1988,"\n"],[1,2032,"\n"],[1,2070,"\n"]],[1697,2127],[2133,2133]]],[1567431730870,["GJX@GJXAIOU",[[1,2282,"\n"],[1,2308,"\n"],[1,2363,"\n"],[1,2422,"\n"],[1,2511,"\n"],[1,2546,"\n"],[1,2567,"\n"],[1,2572,"\n"],[1,2661,"\n"]],[2196,2664],[2673,2673]]],[1567431739838,["GJX@GJXAIOU",[[1,2882,"\n"],[1,2956,"\n"],[1,3036,"\n"],[1,3037,"\n"],[1,3110,"\n"],[1,3187,"\n"],[1,3268,"\n"],[1,3269,"\n"],[1,3340,"\n"],[1,3401,"\n"],[1,3460,"\n"],[1,3521,"\n"],[1,3582,"\n"],[1,3583,"\n"],[1,3664,"\n"],[1,3665,"\n"],[1,3733,"\n"],[1,3801,"\n"],[1,3802,"\n"],[1,3864,"\n"],[1,3952,"\n"],[1,4014,"\n"],[1,4078,"\n"],[1,4153,"\n"],[1,4225,"\n"],[1,4296,"\n"],[1,4297,"\n"],[1,4367,"\n"],[1,4445,"\n"],[1,4446,"\n"],[1,4514,"\n"],[1,4569,"\n"]],[2858,4572],[4604,4604]]],[1567431767554,["GJX@GJXAIOU",[[1,2692,"**"],[1,2736,"**"]],[2692,2736],[2692,2740]]],[1567431837381,["GJX@GJXAIOU",[[1,2744,"**"],[1,2772,"**"]],[2744,2772],[2744,2776]]],[1567431839675,["GJX@GJXAIOU",[[1,2753," "]],[2753,2753],[2754,2754]]],[1567431841093,["GJX@GJXAIOU",[[1,2767," "]],[2767,2767],[2768,2768]]],[1567431841805,["GJX@GJXAIOU",[[1,2769," "]],[2769,2769],[2770,2770]]],[1567431851155,["GJX@GJXAIOU",[[1,2784," "]],[2784,2784],[2785,2785]]],[1567431852156,["GJX@GJXAIOU",[[1,2789," "]],[2789,2789],[2790,2790]]],[1567431854597,["GJX@GJXAIOU",[[1,2833," "]],[2833,2833],[2834,2834]]],[1567431857268,["GJX@GJXAIOU",[[1,2820," "]],[2820,2820],[2821,2821]]],[1567431858461,["GJX@GJXAIOU",[[1,2819," "]],[2819,2819],[2820,2820]]],[1567431860173,["GJX@GJXAIOU",[[1,2812," "]],[2812,2812],[2813,2813]]],[1567431896085,["GJX@GJXAIOU",[[1,4882,"\n"],[1,4932,"\n"]],[4847,4953],[4955,4955]]],[1567431905850,["GJX@GJXAIOU",[[1,5007,"**"],[1,5033,"**"]],[5007,5033],[5007,5037]]],[1567431916531,["GJX@GJXAIOU",[[1,5066,"**"],[1,5111,"**"]],[5066,5111],[5066,5115]]],[1567431937522,["GJX@GJXAIOU",[[-1,5239,"\n"]],[5239,5239],[5238,5238]]],[1567431939307,["GJX@GJXAIOU",[[1,5239,"\n"]],[5238,5238],[5239,5239]]],[1567431954867,["GJX@GJXAIOU",[[1,2139,"\n"]],[2138,2138],[2139,2139]]],[1567431954971,["GJX@GJXAIOU",[[1,2140,"\n"]],[2139,2139],[2140,2140]]],[1567431962791,["GJX@GJXAIOU",[[1,2140,"## shi"]],[2140,2140],[2146,2146]]],[1567431963634,["GJX@GJXAIOU",[[-1,2143,"shi"]],[2146,2146],[2143,2143]]],[1567431967367,["GJX@GJXAIOU",[[1,2143,"事务管理器"]],[2143,2143],[2148,2148]]],[1567431974659,["GJX@GJXAIOU",[[1,5050,"\n"]],[5049,5049],[5050,5050]]],[1567431974762,["GJX@GJXAIOU",[[1,5051,"\n"]],[5050,5050],[5051,5051]]],[1567431982221,["GJX@GJXAIOU",[[1,5051,"## 数据源配置"]],[5051,5051],[5059,5059]]],[1567431982979,["GJX@GJXAIOU",[[1,5060,"\n"]],[5059,5059],[5060,5060]]],[1567431995045,["GJX@GJXAIOU",[[1,5248,"- "]],[5248,5248],[5250,5250]]],[1567432019236,["GJX@GJXAIOU",[[-1,5466,"\n"]],[5466,5466],[5465,5465]]],[1567432020461,["GJX@GJXAIOU",[[-1,5491,"\n"]],[5491,5491],[5490,5490]]],[1567432021282,["GJX@GJXAIOU",[[-1,5513,"\n"]],[5513,5513],[5512,5512]]],[1567432021851,["GJX@GJXAIOU",[[-1,5533,"\n"]],[5533,5533],[5532,5532]]],[1567432027196,["GJX@GJXAIOU",[[1,5410,"* "],[1,5466,"* "],[1,5491,"* "],[1,5513,"* "],[1,5533,"* "]],[5410,5562],[5412,5572]]],[1567432028338,["GJX@GJXAIOU",[[1,5410,"  "],[1,5468,"  "],[1,5495,"  "],[1,5519,"  "],[1,5541,"  "]],[5412,5572],[5414,5582]]],[1567432034963,["GJX@GJXAIOU",[[1,5378,"- "]],[5378,5378],[5380,5380]]],[1567432041914,["GJX@GJXAIOU",[[-1,5262,"\n"]],[5262,5262],[5261,5261]]],[1567432044492,["GJX@GJXAIOU",[[-1,5376,"\n"]],[5376,5376],[5375,5375]]],[1567432046500,["GJX@GJXAIOU",[[1,5376,"  "]],[5378,5378],[5380,5380]]],[1567432051043,["GJX@GJXAIOU",[[1,5414,"  "],[1,5474,"  "],[1,5501," "],[1,5503," "],[1,5527,"  "],[1,5551,"  "]],[5416,5604],[5418,5614]]],[1567432053875,["GJX@GJXAIOU",[[-1,5411,"\n"]],[5411,5411],[5410,5410]]],[1567432070418,["GJX@GJXAIOU",[[-1,5660,"\n"]],[5661,5661],[5660,5660]]],[1567432070844,["GJX@GJXAIOU",[[-1,5659,"\n"]],[5660,5660],[5659,5659]]],[1567432071795,["GJX@GJXAIOU",[[-1,5658,"："]],[5659,5659],[5658,5658]]],[1567432075404,["GJX@GJXAIOU",[[1,5658,"：`"]],[5658,5658],[5660,5660]]],[1567432078779,["GJX@GJXAIOU",[[1,5680,"`"]],[5680,5680],[5681,5681]]],[1567432085677,["GJX@GJXAIOU",[[1,5770,"- "]],[5770,5770],[5772,5772]]],[1567432089811,["GJX@GJXAIOU",[[-1,5784,"\n"]],[5784,5784],[5783,5783]]],[1567432105774,["GJX@GJXAIOU",[[1,5873,"- "]],[5873,5873],[5875,5875]]],[1567432107403,["GJX@GJXAIOU",[[-1,5872,"\n"]],[5872,5872],[5871,5871]]],[1567432109365,["GJX@GJXAIOU",[[1,5872,"  "]],[5919,5919],[5921,5921]]],[1567432112069,["GJX@GJXAIOU",[[-1,5989,"\n"]],[5989,5989],[5988,5988]]],[1567432114059,["GJX@GJXAIOU",[[-1,6034,"\n"]],[6034,6034],[6033,6033]]],[1567432116916,["GJX@GJXAIOU",[[-1,6113,"\n"]],[6113,6113],[6112,6112]]],[1567432119946,["GJX@GJXAIOU",[[-1,6220,"\n"]],[6220,6220],[6219,6219]]],[1567432122875,["GJX@GJXAIOU",[[-1,6324,"\n"]],[6324,6324],[6323,6323]]],[1567432126054,["GJX@GJXAIOU",[[1,5924,"* "],[1,5989,"* "],[1,6034,"* "],[1,6113,"* "],[1,6220,"* "],[1,6324,"* "]],[5924,6562],[5926,6574]]],[1567432126413,["GJX@GJXAIOU",[[1,5924,"  "],[1,5991,"  "],[1,6038,"  "],[1,6119,"  "],[1,6228,"  "],[1,6334,"  "]],[5926,6574],[5928,6586]]],[1567432128611,["GJX@GJXAIOU",[[1,5926,"  "],[1,5995,"  "],[1,6042,"  "],[1,6127,"  "],[1,6236," "],[1,6238," "],[1,6344,"  "]],[5928,6586],[5930,6598]]],[1567432129987,["GJX@GJXAIOU",[[-1,5923,"\n"]],[5923,5923],[5922,5922]]],[1567432141039,["GJX@GJXAIOU",[[1,6453,"- - "]],[6453,6453],[6457,6457]]],[1567432146837,["GJX@GJXAIOU",[[-1,6453,"-- "]],[6456,6456],[6453,6453]]],[1567432149167,["GJX@GJXAIOU",[[1,6453,"\n    -"]],[6453,6453],[6459,6459]]],[1567432149366,["GJX@GJXAIOU",[[1,6460," "]],[6459,6459],[6460,6460]]],[1567432155142,["GJX@GJXAIOU",[[1,6606,"- "]],[6606,6606],[6608,6608]]],[1567432161230,["GJX@GJXAIOU",[[-1,6616,"\n"]],[6616,6616],[6615,6615]]],[1567432167900,["GJX@GJXAIOU",[[1,6684,"\n"]],[6684,6684],[6685,6685]]],[1567432169517,["GJX@GJXAIOU",[[1,6685,"  - "]],[6685,6685],[6689,6689]]],[1567432173434,["GJX@GJXAIOU",[[-1,6852,"\n"]],[6852,6852],[6851,6851]]],[1567432176290,["GJX@GJXAIOU",[[1,6705,"  - "],[1,6706,"  - "],[1,6852,"  - "]],[6705,6952],[6709,6964]]],[1567432178370,["GJX@GJXAIOU",[[1,6707,"  "],[1,6710,"  "],[1,6860,"  "]],[6709,6964],[6711,6970]]],[1567432182162,["GJX@GJXAIOU",[[-1,6705,"    - "]],[6711,6711],[6705,6705]]],[1567432182547,["GJX@GJXAIOU",[[-1,6705,"\n"]],[6705,6705],[6704,6704]]],[1567432184446,["GJX@GJXAIOU",[[1,6711,"`"]],[6711,6711],[6712,6712]]],[1567432185711,["GJX@GJXAIOU",[[1,6727,"`"]],[6727,6727],[6728,6728]]],[1567432191308,["GJX@GJXAIOU",[[1,6802,"`"]],[6802,6802],[6803,6803]]],[1567432192405,["GJX@GJXAIOU",[[1,6763,"`"]],[6763,6763],[6764,6764]]],[1567432194824,["GJX@GJXAIOU",[[1,6867,"`"]],[6867,6867],[6868,6868]]],[1567432195717,["GJX@GJXAIOU",[[1,6879,"`"]],[6879,6879],[6880,6880]]],[1567432199682,["GJX@GJXAIOU",[[-1,6970,"\n"]],[6970,6970],[6969,6969]]],[1567432204709,["GJX@GJXAIOU",[[1,6970,"\n"]],[6970,6970],[6971,6971]]],[1567432206419,["GJX@GJXAIOU",[[-1,7014,"\n"]],[7015,7015],[7014,7014]]],[1567432208026,["GJX@GJXAIOU",[[-1,7013,"\n"]],[7014,7014],[7013,7013]]],[1567432208947,["GJX@GJXAIOU",[[1,7013,"·"]],[7013,7013],[7014,7014]]],[1567432210509,["GJX@GJXAIOU",[[-1,7013,"·"]],[7014,7014],[7013,7013]]],[1567432210957,["GJX@GJXAIOU",[[1,7013,"`"]],[7013,7013],[7014,7014]]],[1567432212309,["GJX@GJXAIOU",[[1,7031,"`"]],[7031,7031],[7032,7032]]],[1567432213805,["GJX@GJXAIOU",[[-1,7033,"\n"]],[7033,7033],[7032,7032]]]],null,"GJX@GJXAIOU"]]}