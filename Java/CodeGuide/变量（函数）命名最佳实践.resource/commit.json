{"compress":true,"commitItems":[["4c069dfe-c6ce-4beb-afbc-dd03dda06ab2",1566012364555,"# 变量（函数）命名最佳实践\n\n 2019-07-18 22:41:16\n\n **作者：admin**\n\n### 良好命名的必要\n\n1.  代码命名是件很头疼的事情，既要`语义化`又要`简洁`，最终目的为了代码的`可维护性`\n2.  合适的命名会使代码读起来优雅流畅、耐人寻味，让你的代码如艺术品一般。比如：\n    *   `promise` - 异步请求数据时，“承诺”一定会回应（成功或失败），很有画面感\n    *   `on`/`off` - jquery 中表示监听和销毁事件，言简意赅，方便易用\n    *   `fork` - github 的 fork 操作，由“叉子”引申为复刻属于自己的分叉，形象生动\n\n### 良好命名的要点\n\n1.  使用能够表达意图的名字\n\n    良好命名能够告诉我们它要做什么，为什么存在，以及是如何工作的。选择能够表达意图的名字，有利于我们清楚理解程序含义。相反，名不副实则会误导阅读代码的人，有时需要打断点才能判断出程序的真实功能。\n\n2.  不要怕在选择名字上花时间\n\n    多尝试几种不同的名字，直到足以描述程序含义，不要害怕在命名上花时间。以后阅读你代码的人（包括自己）会因此受益。而且，一个具有清晰描述性的命名，还有助于你在心中理清模块的设计。良好的命名可能需要花费额外的时间，但是从长远来看，利大于弊。\n\n3.  类名\n\n    类名应该是个名词或名词词组，如 Customer、Account、AddressParser。父类的命名应该简短，子类的应该详尽，通过形容词来描述其不同于父类之处，如 SavingsAccount 继承自 Account。\n\n4.  变量名\n\n    变量名一般应该是名词。如果是布尔变量，应写成谓词的形式，如 isEmpty，这样放到if 语句才便于理解。\n\n5.  方法名\n\n    方法名应该是一个动词或动词词组，如 sendMessage()、getUser()、save()。访问器和设置器应该分别带有 get 和 set 前缀。返回布尔值的方法应该前缀 `is`，如 isPostable()。\n\n### 常用动词、对仗词\n\n| 单词 | 语义 |\n| --- | --- |\n| add / remove | 添加 / 移除 |\n| add / delete | 添加 / 删除 |\n| able / disable | 可用 / 不可用 |\n| insert / delete | 插入 / 删除 |\n| start / stop | 开始 / 停止 |\n| begin / end | 开始 / 结束 |\n| send / receive | 发送 / 接收 |\n| get / set | 取出 / 设置 |\n| get / release | 获取 / 释放 |\n| put / get | 放入 / 取出 |\n| up / down | 向上 / 向下 |\n| show / hide | 显示 / 隐藏 |\n| open / close | 打开 / 关闭 |\n| source / target | 源 / 目标 |\n| source / destination | 源 / 目的地 |\n| serialize / unserialize | 序列化 / 反序列化 |\n| increment / decrement | 增加 / 减少 |\n| lock / unlock | 锁 / 解锁 |\n| old / new | 旧的 / 新的 |\n| first / last | 第一个 / 最后一个 |\n| next / previous | 下一个 / 前一个 |\n| create / destroy | 创建 / 销毁 |\n| min / max | 最小 / 最大 |\n| visible / invisible | 可见 / 不可见 |\n| valid / invalid | 验证有效 / 验证无效 |\n| pop / push | 出栈 / 入栈 |\n| store / query | 存储 / 查询 |\n| reset | 重置 |\n| format | 格式化 |\n| validate | 验证 |\n| handle | 处理 |\n| toggle | 开关 |\n| dispatch | 分派 |\n\n### 常用名词\n\n| 单词 | 语义 |\n| --- | --- |\n| settings | 配置 |\n| iterator | 迭代器 |\n| adapter | 适配器 |\n| listener | 监听器 |\n| trigger | 触发器 |\n| acceptor | 接收器 |\n| connector | 连接器 |\n| dispatcher | 分派器 |\n| reactor | 反应器 |\n| executor | 执行器 |\n| parser | 解析器 |\n| builder | 生成器 |\n| handler | 处理器 |\n| Invoker | 调用方 |\n| validator | 验证器 |\n| modle | 模型 |\n\n### 常用缩写\n\n建议在 css 中命名多用缩写，在 js 中根据实际场景选择是否使用\n\n| 原始单词 | 缩写 |\n| --- | --- |\n| abbreviation | abbr |\n| address | addr |\n| administrator | admin |\n| analysis | anlys |\n| architecture | arch |\n| ascending | asc |\n| attribute | attr |\n| authentication | auth |\n| background | bg |\n| body | bd |\n| business | biz |\n| button | btn |\n| buffer | buf |\n| calculator | calc |\n| column | col |\n| command | cmd |\n| configuration | conf |\n| constant | const |\n| content | cnt |\n| context | cxt |\n| control | ctrl |\n| copy | cp |\n| delete | del |\n| dependency | dep |\n| develop | dev |\n| distribution | dist |\n| document | doc |\n| element | el |\n| environment | env |\n| escape | esc |\n| execute | exec |\n| footer | ft |\n| format | fmt |\n| frequently asked questions | faqs |\n| function | fn |\n| header | hd |\n| information | info |\n| insert | ins |\n| introduction | intro |\n| label | lbl |\n| library | lib |\n| list | ls |\n| lock | lk |\n| manager | mgr |\n| maximum | max |\n| message | msg |\n| millimeter | ml |\n| minimum | min |\n| module | mod |\n| move | mv |\n| multiply | mul |\n| navigation | nav |\n| number | num |\n| option | opt |\n| package | pkg |\n| page | pg |\n| parameter | param |\n| password | pwd |\n| picture | pic |\n| position | pos |\n| property | prop |\n| recommendation | rec |\n| register | reg |\n| remove | rm |\n| repository | repo |\n| request | req |\n| response | resp |\n| screen | scr |\n| second | sec |\n| something | sth |\n| source | src |\n| server | sev |\n| system | sys |\n| table | tbl |\n| telephone | tel |\n| template | tpl |\n| to | 2 |\n| user | usr |\n| value | val |\n| version | ver |\n| window | win |\n\n### 常用前缀\n\n| 语义 | 命名 |\n| --- | --- |\n| re | 再次执行 |\n| pre | 之前 |\n| post | 之后 |\n| multi | 多项 |\n| un | 否定 |\n| per | 每项 |\n\n### 常用后缀\n\n| 语义 | 命名 |\n| --- | --- |\n| ed | 过去式 |\n| ing | 进行时 |\n| able | 具备能力 |\n| s / es | 名词复数 |\n\n### 布局相关\n\n| 语义 | 命名 |\n| --- | --- |\n| 布局 | layout |\n| 主体内容 | container |\n| 头部 | header |\n| 主要部分 | main |\n| 侧边栏 | sidebar |\n| 子容器 | sub- |\n| 包含块 | -wrap |\n| 内部的 | -inner |\n| 外部的 | -outer |\n| 行 | row |\n| 列 | column |\n| 区域 | region / area / section |\n| 底部 | footer |\n| 清除浮动 | clearfix |\n| 项 | item |\n\n### 组件相关\n\n| 语义 | 命名 |\n| --- | --- |\n| 导航 | nav |\n| 面包屑 | crumb |\n| 菜单 | menu |\n| 选项卡 | tab |\n| 内容 | content |\n| 列表 | list |\n| 排行 | rank |\n| 商标 | logo |\n| 幻灯片 | slide |\n| 提示 | tip / msg / hint |\n| 注册 | register |\n| 弹出框 | dialog / model |\n| 合作伙伴 | partner |\n| 工具条 | toolbar |\n| 标语 | banner |\n| 版权 | copyright |\n| 评论 | comment |\n| 面板 | panel |\n| 手风琴 | accordion |\n| 加载 | loading |\n| 头像 | avatar |\n| 标签 | tag |\n| 表格 | table |\n| 下拉框 | dropdown\n |",[[1566012308477,["GJX@GJXAIOU",[[-1,346," "]],[347,347],[346,346]]],[1566012311047,["GJX@GJXAIOU",[[-1,464," "]],[465,465],[464,464]]],[1566012312661,["GJX@GJXAIOU",[[-1,342,"\n"]],[342,342],[341,341]]],[1566012313687,["GJX@GJXAIOU",[[-1,459,"\n"]],[459,459],[458,458]]],[1566012315453,["GJX@GJXAIOU",[[-1,588,"\n"]],[588,588],[587,587]]],[1566012317677,["GJX@GJXAIOU",[[-1,713,"\n"]],[713,713],[712,712]]],[1566012318548,["GJX@GJXAIOU",[[-1,780,"\n"]],[780,780],[779,779]]],[1566012335098,["GJX@GJXAIOU",[[-1,16," 2019-07-18 22:41:16\n\n **作者：admin**"]],[16,51],[16,16]]],[1566012335152,["GJX@GJXAIOU",[[-1,17,"\n"]],[16,16],[15,15]]],[1566012375360,["GJX@GJXAIOU",[[1,556,"**"],[1,569,"**"]],[556,569],[556,573]]],[1566012391283,["GJX@GJXAIOU",[[1,685,"****"]],[685,685],[687,687]]]],null,"GJX@GJXAIOU"],["a3d03c8d-e677-4908-9e16-e641855b28df",1566215103666,"# 变量（函数）命名最佳实践\n\n\n### 良好命名的必要\n\n1.  代码命名是件很头疼的事情，既要`语义化`又要`简洁`，最终目的为了代码的`可维护性`\n2.  合适的命名会使代码读起来优雅流畅、耐人寻味，让你的代码如艺术品一般。比如：\n    *   `promise` - 异步请求数据时，“承诺”一定会回应（成功或失败），很有画面感\n    *   `on`/`off` - jquery 中表示监听和销毁事件，言简意赅，方便易用\n    *   `fork` - github 的 fork 操作，由“叉子”引申为复刻属于自己的分叉，形象生动\n\n### 良好命名的要点\n\n1.  使用能够表达意图的名字\n   良好命名能够告诉我们它要做什么，为什么存在，以及是如何工作的。选择能够表达意图的名字，有利于我们清楚理解程序含义。相反，名不副实则会误导阅读代码的人，有时需要打断点才能判断出程序的真实功能。\n\n2.  不要怕在选择名字上花时间\n   多尝试几种不同的名字，直到足以描述程序含义，不要害怕在命名上花时间。以后阅读你代码的人（包括自己）会因此受益。而且，一个具有清晰描述性的命名，还有助于你在心中理清模块的设计。良好的命名可能需要花费额外的时间，但是从长远来看，利大于弊。\n\n3.  类名\n    **类名应该是个名词或名词词组**，如 Customer、Account、AddressParser。父类的命名应该简短，子类的应该详尽，通过形容词来描述其不同于父类之处，如 SavingsAccount 继承自 Account。\n\n4.  变量名\n    ****变量名一般应该是名词。如果是布尔变量，应写成谓词的形式，如 isEmpty，这样放到if 语句才便于理解。\n\n5.  方法名\n    方法名应该是一个动词或动词词组，如 sendMessage()、getUser()、save()。访问器和设置器应该分别带有 get 和 set 前缀。返回布尔值的方法应该前缀 `is`，如 isPostable()。\n\n### 常用动词、对仗词\n\n| 单词 | 语义 |\n| --- | --- |\n| add / remove | 添加 / 移除 |\n| add / delete | 添加 / 删除 |\n| able / disable | 可用 / 不可用 |\n| insert / delete | 插入 / 删除 |\n| start / stop | 开始 / 停止 |\n| begin / end | 开始 / 结束 |\n| send / receive | 发送 / 接收 |\n| get / set | 取出 / 设置 |\n| get / release | 获取 / 释放 |\n| put / get | 放入 / 取出 |\n| up / down | 向上 / 向下 |\n| show / hide | 显示 / 隐藏 |\n| open / close | 打开 / 关闭 |\n| source / target | 源 / 目标 |\n| source / destination | 源 / 目的地 |\n| serialize / unserialize | 序列化 / 反序列化 |\n| increment / decrement | 增加 / 减少 |\n| lock / unlock | 锁 / 解锁 |\n| old / new | 旧的 / 新的 |\n| first / last | 第一个 / 最后一个 |\n| next / previous | 下一个 / 前一个 |\n| create / destroy | 创建 / 销毁 |\n| min / max | 最小 / 最大 |\n| visible / invisible | 可见 / 不可见 |\n| valid / invalid | 验证有效 / 验证无效 |\n| pop / push | 出栈 / 入栈 |\n| store / query | 存储 / 查询 |\n| reset | 重置 |\n| format | 格式化 |\n| validate | 验证 |\n| handle | 处理 |\n| toggle | 开关 |\n| dispatch | 分派 |\n\n### 常用名词\n\n| 单词 | 语义 |\n| --- | --- |\n| settings | 配置 |\n| iterator | 迭代器 |\n| adapter | 适配器 |\n| listener | 监听器 |\n| trigger | 触发器 |\n| acceptor | 接收器 |\n| connector | 连接器 |\n| dispatcher | 分派器 |\n| reactor | 反应器 |\n| executor | 执行器 |\n| parser | 解析器 |\n| builder | 生成器 |\n| handler | 处理器 |\n| Invoker | 调用方 |\n| validator | 验证器 |\n| modle | 模型 |\n\n### 常用缩写\n\n建议在 css 中命名多用缩写，在 js 中根据实际场景选择是否使用\n\n| 原始单词 | 缩写 |\n| --- | --- |\n| abbreviation | abbr |\n| address | addr |\n| administrator | admin |\n| analysis | anlys |\n| architecture | arch |\n| ascending | asc |\n| attribute | attr |\n| authentication | auth |\n| background | bg |\n| body | bd |\n| business | biz |\n| button | btn |\n| buffer | buf |\n| calculator | calc |\n| column | col |\n| command | cmd |\n| configuration | conf |\n| constant | const |\n| content | cnt |\n| context | cxt |\n| control | ctrl |\n| copy | cp |\n| delete | del |\n| dependency | dep |\n| develop | dev |\n| distribution | dist |\n| document | doc |\n| element | el |\n| environment | env |\n| escape | esc |\n| execute | exec |\n| footer | ft |\n| format | fmt |\n| frequently asked questions | faqs |\n| function | fn |\n| header | hd |\n| information | info |\n| insert | ins |\n| introduction | intro |\n| label | lbl |\n| library | lib |\n| list | ls |\n| lock | lk |\n| manager | mgr |\n| maximum | max |\n| message | msg |\n| millimeter | ml |\n| minimum | min |\n| module | mod |\n| move | mv |\n| multiply | mul |\n| navigation | nav |\n| number | num |\n| option | opt |\n| package | pkg |\n| page | pg |\n| parameter | param |\n| password | pwd |\n| picture | pic |\n| position | pos |\n| property | prop |\n| recommendation | rec |\n| register | reg |\n| remove | rm |\n| repository | repo |\n| request | req |\n| response | resp |\n| screen | scr |\n| second | sec |\n| something | sth |\n| source | src |\n| server | sev |\n| system | sys |\n| table | tbl |\n| telephone | tel |\n| template | tpl |\n| to | 2 |\n| user | usr |\n| value | val |\n| version | ver |\n| window | win |\n\n### 常用前缀\n\n| 语义 | 命名 |\n| --- | --- |\n| re | 再次执行 |\n| pre | 之前 |\n| post | 之后 |\n| multi | 多项 |\n| un | 否定 |\n| per | 每项 |\n\n### 常用后缀\n\n| 语义 | 命名 |\n| --- | --- |\n| ed | 过去式 |\n| ing | 进行时 |\n| able | 具备能力 |\n| s / es | 名词复数 |\n\n### 布局相关\n\n| 语义 | 命名 |\n| --- | --- |\n| 布局 | layout |\n| 主体内容 | container |\n| 头部 | header |\n| 主要部分 | main |\n| 侧边栏 | sidebar |\n| 子容器 | sub- |\n| 包含块 | -wrap |\n| 内部的 | -inner |\n| 外部的 | -outer |\n| 行 | row |\n| 列 | column |\n| 区域 | region / area / section |\n| 底部 | footer |\n| 清除浮动 | clearfix |\n| 项 | item |\n\n### 组件相关\n\n| 语义 | 命名 |\n| --- | --- |\n| 导航 | nav |\n| 面包屑 | crumb |\n| 菜单 | menu |\n| 选项卡 | tab |\n| 内容 | content |\n| 列表 | list |\n| 排行 | rank |\n| 商标 | logo |\n| 幻灯片 | slide |\n| 提示 | tip / msg / hint |\n| 注册 | register |\n| 弹出框 | dialog / model |\n| 合作伙伴 | partner |\n| 工具条 | toolbar |\n| 标语 | banner |\n| 版权 | copyright |\n| 评论 | comment |\n| 面板 | panel |\n| 手风琴 | accordion |\n| 加载 | loading |\n| 头像 | avatar |\n| 标签 | tag |\n| 表格 | table |\n| 下拉框 | dropdown\n |",[[1566215094331,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1566215095750,["GJX@GJXAIOU",[[1,0,"-"],[-1,137," "],[1,138," "],[-1,189," "],[1,190," "],[-1,234," "],[1,235," "],[-1,845," "],[1,846," "]],[0,0],[1,1]]],[1566215095894,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1566215096038,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1566215096074,["GJX@GJXAIOU",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1566215097069,["GJX@GJXAIOU",[[1,4,"s"]],[4,4],[5,5]]],[1566215097556,["GJX@GJXAIOU",[[-1,4,"s"]],[5,5],[4,4]]],[1566215100494,["GJX@GJXAIOU",[[1,4,"style : summer"]],[4,4],[18,18]]],[1566215111125,["GJX@GJXAIOU",[[1,23,"@toc"]],[23,23],[27,27]]],[1566215112471,["GJX@GJXAIOU",[[1,28,"\n"]],[27,27],[28,28]]],[1566215135509,["GJX@GJXAIOU",[[-1,48,"#"]],[49,49],[56,56]]],[1566215138634,["GJX@GJXAIOU",[[1,49,"y "]],[49,49],[50,50]]],[1566215138670,["GJX@GJXAIOU",[[1,50,"i"]],[50,50],[51,51]]],[1566215140821,["GJX@GJXAIOU",[[-1,49,"yi "]],[51,51],[49,49]]],[1566215142161,["GJX@GJXAIOU",[[1,49,"一、"]],[49,49],[51,51]]],[1566215145766,["GJX@GJXAIOU",[[-1,309,"#"]],[311,311],[317,317]]],[1566215149584,["GJX@GJXAIOU",[[1,310,"二、"]],[310,310],[312,312]]],[1566215155072,["GJX@GJXAIOU",[[1,902,"三、"]],[902,902],[904,904]]],[1566215156189,["GJX@GJXAIOU",[[-1,900,"#"]],[904,904],[911,911]]],[1566215160191,["GJX@GJXAIOU",[[1,1824,"四、"]],[1824,1824],[1826,1826]]],[1566215161438,["GJX@GJXAIOU",[[-1,1822,"#"]],[1826,1826],[1829,1829]]],[1566215165664,["GJX@GJXAIOU",[[1,2157,"五、"]],[2157,2157],[2159,2159]]],[1566215167047,["GJX@GJXAIOU",[[-1,2155,"#"]],[2159,2159],[2162,2162]]],[1566215179812,["GJX@GJXAIOU",[[1,3763,"六、"]],[3763,3763],[3765,3765]]],[1566215181102,["GJX@GJXAIOU",[[-1,3761,"#"]],[3765,3765],[3768,3768]]],[1566215187250,["GJX@GJXAIOU",[[1,3882,"七、"]],[3882,3882],[3884,3884]]],[1566215188806,["GJX@GJXAIOU",[[-1,3880,"#"]],[3884,3884],[3887,3887]]],[1566215192301,["GJX@GJXAIOU",[[-1,3979,"#"]],[3981,3981],[3984,3984]]],[1566215197611,["GJX@GJXAIOU",[[1,3980,"吧"]],[3980,3980],[3981,3981]]],[1566215198296,["GJX@GJXAIOU",[[-1,3980,"吧"]],[3981,3981],[3980,3980]]],[1566215201519,["GJX@GJXAIOU",[[1,3980,"八、"]],[3980,3980],[3982,3982]]],[1566215207530,["GJX@GJXAIOU",[[1,4280,"九、"]],[4280,4280],[4282,4282]]],[1566215209000,["GJX@GJXAIOU",[[-1,4278,"#"]],[4282,4282],[4285,4285]]],[1566215214461,["GJX@GJXAIOU",[[-1,4717,"|"]],[4718,4718],[4717,4717]]],[1566215215063,["GJX@GJXAIOU",[[-1,4716," "],[1,4717,"\n"]],[4717,4717],[4716,4716]]],[1566215215594,["GJX@GJXAIOU",[[-1,4716,"\n"]],[4716,4716],[4715,4715]]],[1566215217143,["GJX@GJXAIOU",[[1,4715," |"]],[4715,4715],[4717,4717]]]],null,"GJX@GJXAIOU"]]}