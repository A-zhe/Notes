{"compress":true,"commitItems":[["d8019e15-4876-46bc-a811-3ed09a81eee0",1563099721958,"## Java 最常见的 208 道面试题：第十一模块答案\n\n[Java团长](javascript:void(0);) _3月28日_\n\n**十一、Spring Boot / Spring Cloud**\n\n**104\\. 什么是 spring boot？**\n\n在Spring框架这个大家族中，产生了很多衍生框架，比如 Spring、SpringMvc框架等，Spring的核心内容在于控制反转(IOC)和依赖注入(DI),所谓控制反转并非是一种技术，而是一种思想，在操作方面是指在spring配置文件中创建<bean>，依赖注入即为由spring容器为应用程序的某个对象提供资源，比如 引用对象、常量数据等。\n\nSpringBoot是一个框架，一种全新的编程规范，他的产生简化了框架的使用，所谓简化是指简化了Spring众多框架中所需的大量且繁琐的配置文件，所以 SpringBoot是一个服务于框架的框架，服务范围是简化配置文件。\n\n**105\\. 为什么要用 spring boot？**\n\n*   Spring Boot使编码变简单\n\n*   Spring Boot使配置变简单\n\n*   Spring Boot使部署变简单\n\n*   Spring Boot使监控变简单\n\n*   Spring的不足\n\n**106\\. spring boot 核心配置文件是什么？**\n\nSpring Boot提供了两种常用的配置文件：\n\n*   properties文件\n\n*   yml文件\n\n**107\\. spring boot 配置文件有哪几种类型？它们有什么区别？**\n\nSpring Boot提供了两种常用的配置文件，分别是properties文件和yml文件。相对于properties文件而言，yml文件更年轻，也有很多的坑。可谓成也萧何败萧何，yml通过空格来确定层级关系，使配置文件结构跟清晰，但也会因为微不足道的空格而破坏了层级关系。\n\n**108\\. spring boot 有哪些方式可以实现热部署？**\n\nSpringBoot热部署实现有两种方式：\n\n**①. 使用spring loaded**\n\n在项目中添加如下代码：\n\n```\n<build>\n```\n\n添加完毕后需要使用mvn指令运行：\n\n首先找到IDEA中的Edit configurations ,然后进行如下操作：（点击左上角的\"+\",然后选择maven将出现右侧面板，在红色划线部位输入如图所示指令，你可以为该指令命名(此处命名为MvnSpringBootRun)）\n\n　　　　![](https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBVpliaEhHBV405sFvkH30cTSA5YfGIE2nsibmE6EibQ5SjafIZX3IA02ibQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n点击保存将会在IDEA项目运行部位出现，点击绿色箭头运行即可\n\n![](https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBgiaPy7Cp1GZiajBzrQXPhhMArgb04mw0G9Ax0hRpgxn2yOB5Ms4h8QJA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**②. 使用spring-boot-devtools**\n\n在项目的pom文件中添加依赖：\n\n```\n <!--热部署jar-->\n```\n\n然后：使用 shift+ctrl+alt+\"/\" （IDEA中的快捷键） 选择\"Registry\" 然后勾选 compiler.automake.allow.when.app.running\n\n**109\\. jpa 和 hibernate 有什么区别？**\n\n*   JPA Java Persistence API，是Java EE 5的标准ORM接口，也是ejb3规范的一部分。\n\n*   Hibernate，当今很流行的ORM框架，是JPA的一个实现，但是其功能是JPA的超集。\n\n*   JPA和Hibernate之间的关系，可以简单的理解为JPA是标准接口，Hibernate是实现。那么Hibernate是如何实现与JPA的这种关系的呢。Hibernate主要是通过三个组件来实现的，及hibernate-annotation、hibernate-entitymanager和hibernate-core。\n\n*   hibernate-annotation是Hibernate支持annotation方式配置的基础，它包括了标准的JPA annotation以及Hibernate自身特殊功能的annotation。\n\n*   hibernate-core是Hibernate的核心实现，提供了Hibernate所有的核心功能。\n\n*   hibernate-entitymanager实现了标准的JPA，可以把它看成hibernate-core和JPA之间的适配器，它并不直接提供ORM的功能，而是对hibernate-core进行封装，使得Hibernate符合JPA的规范。\n\n**110\\. 什么是 spring cloud？**\n\n从字面理解，Spring Cloud 就是致力于分布式系统、云服务的框架。\n\nSpring Cloud 是整个 Spring 家族中新的成员，是最近云服务火爆的必然产物。\n\nSpring Cloud 为开发人员提供了快速构建分布式系统中一些常见模式的工具，例如：\n\n*   配置管理\n\n*   服务注册与发现\n\n*   断路器\n\n*   智能路由\n\n*   服务间调用\n\n*   负载均衡\n\n*   微代理\n\n*   控制总线\n\n*   一次性令牌\n\n*   全局锁\n\n*   领导选举\n\n*   分布式会话\n\n*   集群状态\n\n*   分布式消息\n\n*   ……\n\n使用 Spring Cloud 开发人员可以开箱即用的实现这些模式的服务和应用程序。这些服务可以任何环境下运行，包括分布式环境，也包括开发人员自己的笔记本电脑以及各种托管平台。\n\n**111\\. spring cloud 断路器的作用是什么？**\n\n在Spring Cloud中使用了Hystrix 来实现断路器的功能，断路器可以防止一个应用程序多次试图执行一个操作，即很可能失败，允许它继续而不等待故障恢复或者浪费 CPU 周期，而它确定该故障是持久的。断路器模式也使应用程序能够检测故障是否已经解决，如果问题似乎已经得到纠正，应用程序可以尝试调用操作。\n\n断路器增加了稳定性和灵活性，以一个系统，提供稳定性，而系统从故障中恢复，并尽量减少此故障的对性能的影响。它可以帮助快速地拒绝对一个操作，即很可能失败，而不是等待操作超时（或者不返回）的请求，以保持系统的响应时间。如果断路器提高每次改变状态的时间的事件，该信息可以被用来监测由断路器保护系统的部件的健康状况，或以提醒管理员当断路器跳闸，以在打开状态。\n\n**112\\. spring cloud 的核心组件有哪些？**\n\n**①. 服务发现——Netflix Eureka**\n\n一个RESTful服务，用来定位运行在AWS地区（Region）中的中间层服务。由两个组件组成：Eureka服务器和Eureka客户端。Eureka服务器用作服务注册服务器。Eureka客户端是一个java客户端，用来简化与服务器的交互、作为轮询负载均衡器，并提供服务的故障切换支持。Netflix在其生产环境中使用的是另外的客户端，它提供基于流量、资源利用率以及出错状态的加权负载均衡。\n\n**②. 客服端负载均衡——Netflix Ribbon**\n\nRibbon，主要提供客户侧的软件负载均衡算法。Ribbon客户端组件提供一系列完善的配置选项，比如连接超时、重试、重试算法等。Ribbon内置可插拔、可定制的负载均衡组件。\n\n**③. 断路器——Netflix Hystrix**\n\n断路器可以防止一个应用程序多次试图执行一个操作，即很可能失败，允许它继续而不等待故障恢复或者浪费 CPU 周期，而它确定该故障是持久的。断路器模式也使应用程序能够检测故障是否已经解决。如果问题似乎已经得到纠正，应用程序可以尝试调用操作。\n\n**④. 服务网关——Netflix Zuul**\n\n类似nginx，反向代理的功能，不过netflix自己增加了一些配合其他组件的特性。\n\n**⑤. 分布式配置——Spring Cloud Config**\n\n这个还是静态的，得配合Spring Cloud Bus实现动态的配置更新。\n\n**（完）**\n\n**Java团长**\n\n专注于Java干货分享\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBo6kZapd5n479lk8kT7GZHu7CTIPK0lv5OLDaqUgCZGYsYTicrYfcEkg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n扫描上方二维码获取更多Java干货\n\n![](https://mp.weixin.qq.com/mp/qrcode?scene=10000004&size=102&__biz=MzIwMTY0NDU3Nw==&mid=2651938444&idx=2&sn=0cfc68758d3e021b7c7b4727eec5fc4c&send_time=)\n\n微信扫一扫\n关注该公众号",[[1563099666585,["GJX@GJXAIOU",[[-1,31,"[Java团长](javascript:void(0);) _3月28日_"]],[31,68],[31,31]]],[1563099678377,["GJX@GJXAIOU",[[-1,436,"\n"]],[436,436],[435,435]]],[1563099679128,["GJX@GJXAIOU",[[-1,458,"\n"]],[458,458],[457,457]]],[1563099679706,["GJX@GJXAIOU",[[-1,480,"\n"]],[480,480],[479,479]]],[1563099680308,["GJX@GJXAIOU",[[-1,502,"\n"]],[502,502],[501,501]]],[1563099682633,["GJX@GJXAIOU",[[-1,594,"\n"]],[594,594],[593,593]]],[1563099683225,["GJX@GJXAIOU",[[-1,576,"\n"]],[576,576],[575,575]]],[1563099704970,["GJX@GJXAIOU",[[1,895,"        <plugins>\n            <plugin>\n                <!-- springBoot编译插件-->\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <dependencies>\n                    <!-- spring热部署 -->\n                    <!-- 该依赖在此处下载不下来，可以放置在build标签外部下载完成后再粘贴进plugin中 -->\n                    <dependency>\n                        <groupId>org.springframework</groupId>\n                        <artifactId>springloaded</artifactId>\n                        <version>1.2.6.RELEASE</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n"]],[887,894],[1575,1575]]],[1563099720278,["GJX@GJXAIOU",[[-1,2163," "],[1,2164,"\n "],[1,2176,">\n <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-devtools</artifactId>\n </dependency"]],[2163,2177],[2307,2307]]],[1563099722161,["GJX@GJXAIOU",[[-1,2163,"\n"]],[2163,2163],[2162,2162]]],[1563099736968,["GJX@GJXAIOU",[[-1,4456,"**（完）**"],[-1,4464,"\n**Java团长**\n\n专注于Java干货分享\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBo6kZapd5n479lk8kT7GZHu7CTIPK0lv5OLDaqUgCZGYsYTicrYfcEkg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n扫描上方二维码获取更多Java干货\n\n![](https://mp.weixin.qq.com/mp/qrcode?scene=10000004&size=102&__biz=MzIwMTY0NDU3Nw==&mid=2651938444&idx=2&sn=0cfc68758d3e021b7c7b4727eec5fc4c&send_time=)\n\n微信扫一扫\n关注该公众号"]],[4456,4854],[4456,4456]]]],null,"GJX@GJXAIOU"],["5eac4cd7-e952-4e08-a99b-aec33dbd320d",1569585012862,"## Java 最常见的 208 道面试题：第十一模块答案\n\n\n\n**十一、Spring Boot / Spring Cloud**\n\n**104\\. 什么是 spring boot？**\n\n在Spring框架这个大家族中，产生了很多衍生框架，比如 Spring、SpringMvc框架等，Spring的核心内容在于控制反转(IOC)和依赖注入(DI),所谓控制反转并非是一种技术，而是一种思想，在操作方面是指在spring配置文件中创建<bean>，依赖注入即为由spring容器为应用程序的某个对象提供资源，比如 引用对象、常量数据等。\n\nSpringBoot是一个框架，一种全新的编程规范，他的产生简化了框架的使用，所谓简化是指简化了Spring众多框架中所需的大量且繁琐的配置文件，所以 SpringBoot是一个服务于框架的框架，服务范围是简化配置文件。\n\n**105\\. 为什么要用 spring boot？**\n\n*   Spring Boot使编码变简单\n*   Spring Boot使配置变简单\n*   Spring Boot使部署变简单\n*   Spring Boot使监控变简单\n*   Spring的不足\n\n**106\\. spring boot 核心配置文件是什么？**\n\nSpring Boot提供了两种常用的配置文件：\n*   properties文件\n*   yml文件\n\n**107\\. spring boot 配置文件有哪几种类型？它们有什么区别？**\n\nSpring Boot提供了两种常用的配置文件，分别是properties文件和yml文件。相对于properties文件而言，yml文件更年轻，也有很多的坑。可谓成也萧何败萧何，yml通过空格来确定层级关系，使配置文件结构跟清晰，但也会因为微不足道的空格而破坏了层级关系。\n\n**108\\. spring boot 有哪些方式可以实现热部署？**\n\nSpringBoot热部署实现有两种方式：\n\n**①. 使用spring loaded**\n\n在项目中添加如下代码：\n\n```\n<build>\n        <plugins>\n            <plugin>\n                <!-- springBoot编译插件-->\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <dependencies>\n                    <!-- spring热部署 -->\n                    <!-- 该依赖在此处下载不下来，可以放置在build标签外部下载完成后再粘贴进plugin中 -->\n                    <dependency>\n                        <groupId>org.springframework</groupId>\n                        <artifactId>springloaded</artifactId>\n                        <version>1.2.6.RELEASE</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n添加完毕后需要使用mvn指令运行：\n\n首先找到IDEA中的Edit configurations ,然后进行如下操作：（点击左上角的\"+\",然后选择maven将出现右侧面板，在红色划线部位输入如图所示指令，你可以为该指令命名(此处命名为MvnSpringBootRun)）\n\n　　　　![](https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBVpliaEhHBV405sFvkH30cTSA5YfGIE2nsibmE6EibQ5SjafIZX3IA02ibQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n点击保存将会在IDEA项目运行部位出现，点击绿色箭头运行即可\n\n![](https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBgiaPy7Cp1GZiajBzrQXPhhMArgb04mw0G9Ax0hRpgxn2yOB5Ms4h8QJA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**②. 使用spring-boot-devtools**\n\n在项目的pom文件中添加依赖：\n\n```\n <!--热部署jar-->\n <dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-devtools</artifactId>\n </dependency>\n```\n\n然后：使用 shift+ctrl+alt+\"/\" （IDEA中的快捷键） 选择\"Registry\" 然后勾选 compiler.automake.allow.when.app.running\n\n**109\\. jpa 和 hibernate 有什么区别？**\n\n*   JPA Java Persistence API，是Java EE 5的标准ORM接口，也是ejb3规范的一部分。\n\n*   Hibernate，当今很流行的ORM框架，是JPA的一个实现，但是其功能是JPA的超集。\n\n*   JPA和Hibernate之间的关系，可以简单的理解为JPA是标准接口，Hibernate是实现。那么Hibernate是如何实现与JPA的这种关系的呢。Hibernate主要是通过三个组件来实现的，及hibernate-annotation、hibernate-entitymanager和hibernate-core。\n\n*   hibernate-annotation是Hibernate支持annotation方式配置的基础，它包括了标准的JPA annotation以及Hibernate自身特殊功能的annotation。\n\n*   hibernate-core是Hibernate的核心实现，提供了Hibernate所有的核心功能。\n\n*   hibernate-entitymanager实现了标准的JPA，可以把它看成hibernate-core和JPA之间的适配器，它并不直接提供ORM的功能，而是对hibernate-core进行封装，使得Hibernate符合JPA的规范。\n\n**110\\. 什么是 spring cloud？**\n\n从字面理解，Spring Cloud 就是致力于分布式系统、云服务的框架。\n\nSpring Cloud 是整个 Spring 家族中新的成员，是最近云服务火爆的必然产物。\n\nSpring Cloud 为开发人员提供了快速构建分布式系统中一些常见模式的工具，例如：\n\n*   配置管理\n\n*   服务注册与发现\n\n*   断路器\n\n*   智能路由\n\n*   服务间调用\n\n*   负载均衡\n\n*   微代理\n\n*   控制总线\n\n*   一次性令牌\n\n*   全局锁\n\n*   领导选举\n\n*   分布式会话\n\n*   集群状态\n\n*   分布式消息\n\n*   ……\n\n使用 Spring Cloud 开发人员可以开箱即用的实现这些模式的服务和应用程序。这些服务可以任何环境下运行，包括分布式环境，也包括开发人员自己的笔记本电脑以及各种托管平台。\n\n**111\\. spring cloud 断路器的作用是什么？**\n\n在Spring Cloud中使用了Hystrix 来实现断路器的功能，断路器可以防止一个应用程序多次试图执行一个操作，即很可能失败，允许它继续而不等待故障恢复或者浪费 CPU 周期，而它确定该故障是持久的。断路器模式也使应用程序能够检测故障是否已经解决，如果问题似乎已经得到纠正，应用程序可以尝试调用操作。\n\n断路器增加了稳定性和灵活性，以一个系统，提供稳定性，而系统从故障中恢复，并尽量减少此故障的对性能的影响。它可以帮助快速地拒绝对一个操作，即很可能失败，而不是等待操作超时（或者不返回）的请求，以保持系统的响应时间。如果断路器提高每次改变状态的时间的事件，该信息可以被用来监测由断路器保护系统的部件的健康状况，或以提醒管理员当断路器跳闸，以在打开状态。\n\n**112\\. spring cloud 的核心组件有哪些？**\n\n**①. 服务发现——Netflix Eureka**\n\n一个RESTful服务，用来定位运行在AWS地区（Region）中的中间层服务。由两个组件组成：Eureka服务器和Eureka客户端。Eureka服务器用作服务注册服务器。Eureka客户端是一个java客户端，用来简化与服务器的交互、作为轮询负载均衡器，并提供服务的故障切换支持。Netflix在其生产环境中使用的是另外的客户端，它提供基于流量、资源利用率以及出错状态的加权负载均衡。\n\n**②. 客服端负载均衡——Netflix Ribbon**\n\nRibbon，主要提供客户侧的软件负载均衡算法。Ribbon客户端组件提供一系列完善的配置选项，比如连接超时、重试、重试算法等。Ribbon内置可插拔、可定制的负载均衡组件。\n\n**③. 断路器——Netflix Hystrix**\n\n断路器可以防止一个应用程序多次试图执行一个操作，即很可能失败，允许它继续而不等待故障恢复或者浪费 CPU 周期，而它确定该故障是持久的。断路器模式也使应用程序能够检测故障是否已经解决。如果问题似乎已经得到纠正，应用程序可以尝试调用操作。\n\n**④. 服务网关——Netflix Zuul**\n\n类似nginx，反向代理的功能，不过netflix自己增加了一些配合其他组件的特性。\n\n**⑤. 分布式配置——Spring Cloud Config**\n\n这个还是静态的，得配合Spring Cloud Bus实现动态的配置更新。\n\n\n",[[1569584990390,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1569584991215,["GJX@GJXAIOU",[[1,0,"---\nstyle: summer\ntags: [面试]\n---"]],[0,0],[32,32]]],[1569585009997,["GJX@GJXAIOU",[[-1,34,"#"]],[35,35],[34,34]]],[1569585025980,["GJX@GJXAIOU",[[-1,70,"Spring Boot / Spring Cloud"]],[70,96],[70,70]]],[1569585027663,["GJX@GJXAIOU",[[1,59," "],[-1,2372," "],[1,2373," "],[-1,3481," "],[1,3482," "]],[59,59],[60,60]]],[1569585028439,["GJX@GJXAIOU",[[1,60,"Spring Boot / Spring Cloud "]],[60,60],[86,86]]],[1569585034463,["GJX@GJXAIOU",[[-1,87,"答案"]],[87,89],[87,87]]],[1569585044564,["GJX@GJXAIOU",[[-1,91,"**十一、**"]],[91,98],[91,91]]],[1569585045684,["GJX@GJXAIOU",[[-1,98,"\\"]],[99,99],[98,98]]],[1569585047612,["GJX@GJXAIOU",[[-1,93,"**"],[-1,116,"**"]],[102,102],[93,114]]],[1569585048704,["GJX@GJXAIOU",[[1,93,"## "]],[93,114],[117,117]]],[1569585062169,["GJX@GJXAIOU",[[-1,407,"**"],[-1,433,"**"]],[416,416],[407,431]]],[1569585062725,["GJX@GJXAIOU",[[1,407,"## "]],[407,431],[434,434]]],[1569585064668,["GJX@GJXAIOU",[[-1,413,"\\"]],[414,414],[413,413]]],[1569585069231,["GJX@GJXAIOU",[[1,538,"## "]],[543,543],[573,573]]],[1569585070252,["GJX@GJXAIOU",[[-1,541,"**"],[-1,571,"**"]],[573,573],[541,569]]],[1569585072591,["GJX@GJXAIOU",[[-1,544,"\\"]],[545,545],[544,544]]],[1569585088623,["GJX@GJXAIOU",[[-1,628,"\\"],[1,629," "]],[628,629],[628,629]]],[1569585089220,["GJX@GJXAIOU",[[-1,810,"\\"],[1,811," "]],[810,811],[810,811]]],[1569585090091,["GJX@GJXAIOU",[[-1,2433,"\\"],[1,2434," "]],[2433,2434],[2433,2434]]],[1569585090825,["GJX@GJXAIOU",[[-1,3036,"\\"],[1,3037," "]],[3036,3037],[3036,3037]]],[1569585091633,["GJX@GJXAIOU",[[-1,3440,"\\"],[1,3441," "]],[3440,3441],[3440,3441]]],[1569585092422,["GJX@GJXAIOU",[[-1,3806,"\\"],[1,3807," "]],[3806,3807],[3806,3807]]],[1569585103871,["GJX@GJXAIOU",[[1,623,"## "]],[632,632],[667,667]]],[1569585106216,["GJX@GJXAIOU",[[-1,626,"**"],[-1,665,"**"]],[667,667],[626,663]]],[1569585110388,["GJX@GJXAIOU",[[1,804,"## "]],[815,815],[842,842]]],[1569585111452,["GJX@GJXAIOU",[[-1,807,"**"],[-1,840,"**"]],[842,842],[807,838]]],[1569585136791,["GJX@GJXAIOU",[[1,2426,"## "]],[2435,2435],[2461,2461]]],[1569585137933,["GJX@GJXAIOU",[[-1,2429,"**"],[-1,2459,"**"]],[2461,2461],[2429,2457]]],[1569585150413,["GJX@GJXAIOU",[[1,3028,"## "]],[3030,3030],[3058,3058]]],[1569585150982,["GJX@GJXAIOU",[[-1,3031,"**"],[-1,3056,"**"]],[3058,3058],[3031,3054]]],[1569585153608,["GJX@GJXAIOU",[[-1,3198,"\n"]],[3198,3198],[3197,3197]]],[1569585154216,["GJX@GJXAIOU",[[-1,3210,"\n"]],[3210,3210],[3209,3209]]],[1569585154877,["GJX@GJXAIOU",[[-1,3218,"\n"]],[3218,3218],[3217,3217]]],[1569585155613,["GJX@GJXAIOU",[[-1,3188,"\n"]],[3188,3188],[3187,3187]]],[1569585156558,["GJX@GJXAIOU",[[-1,3226,"\n"]],[3226,3226],[3225,3225]]],[1569585157382,["GJX@GJXAIOU",[[-1,3236,"\n"]],[3236,3236],[3235,3235]]],[1569585161294,["GJX@GJXAIOU",[[-1,3245,"\n"]],[3245,3245],[3244,3244]]],[1569585161975,["GJX@GJXAIOU",[[-1,3253,"\n"]],[3253,3253],[3252,3252]]],[1569585162641,["GJX@GJXAIOU",[[-1,3262,"\n"]],[3262,3262],[3261,3261]]],[1569585163262,["GJX@GJXAIOU",[[-1,3272,"\n"]],[3272,3272],[3271,3271]]],[1569585163920,["GJX@GJXAIOU",[[-1,3280,"\n"]],[3280,3280],[3279,3279]]],[1569585164565,["GJX@GJXAIOU",[[-1,3289,"\n"]],[3289,3289],[3288,3288]]],[1569585165231,["GJX@GJXAIOU",[[-1,3299,"\n"]],[3299,3299],[3298,3298]]],[1569585166575,["GJX@GJXAIOU",[[-1,3308,"\n"]],[3308,3308],[3307,3307]]],[1569585167215,["GJX@GJXAIOU",[[-1,3318,"\n"]],[3318,3318],[3317,3317]]],[1569585170566,["GJX@GJXAIOU",[[1,3416,"## "]],[3420,3420],[3452,3452]]],[1569585171109,["GJX@GJXAIOU",[[-1,3419,"**"],[-1,3450,"**"]],[3452,3452],[3419,3448]]],[1569585173567,["GJX@GJXAIOU",[[1,3790,"2"]],[3790,3790],[3791,3791]]],[1569585174125,["GJX@GJXAIOU",[[-1,3781,"**"],[-1,3812,"**"]],[3791,3791],[3781,3810]]],[1569585178364,["GJX@GJXAIOU",[[1,3781,"**"],[1,3810,"**"]],[3781,3810],[3791,3791]]],[1569585179570,["GJX@GJXAIOU",[[-1,3790,"2"]],[3791,3791],[3790,3790]]],[1569585181125,["GJX@GJXAIOU",[[1,3781,"## "]],[3790,3790],[3816,3816]]],[1569585182533,["GJX@GJXAIOU",[[-1,3784,"**"],[-1,3814,"**"]],[3816,3816],[3784,3812]]],[1569585185407,["GJX@GJXAIOU",[[-1,3842,"\n"]],[3842,3842],[3841,3841]]],[1569585186405,["GJX@GJXAIOU",[[-1,4069,"\n"]],[4069,4069],[4068,4068]]],[1569585187718,["GJX@GJXAIOU",[[-1,4186,"\n"]],[4186,4186],[4185,4185]]],[1569585188877,["GJX@GJXAIOU",[[-1,4332,"\n"]],[4332,4332],[4331,4331]]],[1569585191701,["GJX@GJXAIOU",[[-1,4410,"\n"]],[4410,4410],[4409,4409]]],[1569585200910,["GJX@GJXAIOU",[[-1,1951,"![](https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaIORwGa3f2gZWLAVK5mMW2dBgiaPy7Cp1GZiajBzrQXPhhMArgb04mw0G9Ax0hRpgxn2yOB5Ms4h8QJA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[1951,2126],[1951,1951]]],[1569585201333,["GJX@GJXAIOU",[[-1,1952,"\n"]],[1951,1951],[1950,1950]]],[1569585202433,["GJX@GJXAIOU",[[-1,1951,"\n"]],[1950,1950],[1949,1949]]],[1569585215840,["GJX@GJXAIOU",[[1,89,"@toc"]],[89,89],[93,93]]],[1569585218159,["GJX@GJXAIOU",[[1,96,"="]],[96,96],[97,97]]],[1569585218187,["GJX@GJXAIOU",[[-1,96,"="]],[97,97],[96,96]]],[1569585218318,["GJX@GJXAIOU",[[-1,96,"\n"]],[96,96],[95,95]]],[1569585218347,["GJX@GJXAIOU",[[1,95,"="]],[95,95],[96,96]]],[1569585220092,["GJX@GJXAIOU",[[-1,95,"="]],[96,96],[95,95]]]],null,"GJX@GJXAIOU"]]}